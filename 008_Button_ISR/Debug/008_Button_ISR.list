
008_Button_ISR.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001208  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000004c  080013a8  080013a8  000023a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080013f4  080013f4  00003078  2**0
                  CONTENTS
  4 .ARM          00000008  080013f4  080013f4  000023f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080013fc  080013fc  00003078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080013fc  080013fc  000023fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001400  08001400  00002400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000078  20000000  08001404  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00003078  2**0
                  CONTENTS
 10 .bss          00000174  20000078  20000078  00003078  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200001ec  200001ec  00003078  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00003078  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a01  00000000  00000000  000030a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000370  00000000  00000000  00003aa3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000120  00000000  00000000  00003e18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000c5  00000000  00000000  00003f38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002cac  00000000  00000000  00003ffd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001344  00000000  00000000  00006ca9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000097ac  00000000  00000000  00007fed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00011799  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b24  00000000  00000000  000117dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000082  00000000  00000000  00012300  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000078 	.word	0x20000078
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001390 	.word	0x08001390

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000007c 	.word	0x2000007c
 80001dc:	08001390 	.word	0x08001390

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
//uint32_t volatile *pSYSCFG_EXTICR4      	= (uint32_t*) (0x40010000 + 0x014);



int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b082      	sub	sp, #8
 8000284:	af00      	add	r7, sp, #0
	button_init();
 8000286:	f000 f839 	bl	80002fc <button_init>

	while(1)
	{
		//Disable interrupt
		*pEXTIMaskReg &= ~( 1 << 13);
 800028a:	4b17      	ldr	r3, [pc, #92]	@ (80002e8 <main+0x68>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	681a      	ldr	r2, [r3, #0]
 8000290:	4b15      	ldr	r3, [pc, #84]	@ (80002e8 <main+0x68>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8000298:	601a      	str	r2, [r3, #0]

		if(g_button_pressed){
 800029a:	4b14      	ldr	r3, [pc, #80]	@ (80002ec <main+0x6c>)
 800029c:	781b      	ldrb	r3, [r3, #0]
 800029e:	b2db      	uxtb	r3, r3
 80002a0:	2b00      	cmp	r3, #0
 80002a2:	d017      	beq.n	80002d4 <main+0x54>
			//Some delay until button debouncing gets over
			for(uint32_t volatile i=0;i<500000/2;i++);
 80002a4:	2300      	movs	r3, #0
 80002a6:	607b      	str	r3, [r7, #4]
 80002a8:	e002      	b.n	80002b0 <main+0x30>
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	3301      	adds	r3, #1
 80002ae:	607b      	str	r3, [r7, #4]
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	4a0f      	ldr	r2, [pc, #60]	@ (80002f0 <main+0x70>)
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d9f8      	bls.n	80002aa <main+0x2a>
			g_button_press_count++;
 80002b8:	4b0e      	ldr	r3, [pc, #56]	@ (80002f4 <main+0x74>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	3301      	adds	r3, #1
 80002be:	4a0d      	ldr	r2, [pc, #52]	@ (80002f4 <main+0x74>)
 80002c0:	6013      	str	r3, [r2, #0]
			printf("Button is pressed : %lu\n",g_button_press_count);
 80002c2:	4b0c      	ldr	r3, [pc, #48]	@ (80002f4 <main+0x74>)
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	4619      	mov	r1, r3
 80002c8:	480b      	ldr	r0, [pc, #44]	@ (80002f8 <main+0x78>)
 80002ca:	f000 f9fb 	bl	80006c4 <iprintf>
			g_button_pressed = 0;
 80002ce:	4b07      	ldr	r3, [pc, #28]	@ (80002ec <main+0x6c>)
 80002d0:	2200      	movs	r2, #0
 80002d2:	701a      	strb	r2, [r3, #0]
		}

		//Enable interrupt
		*pEXTIMaskReg |= ( 1 << 13);
 80002d4:	4b04      	ldr	r3, [pc, #16]	@ (80002e8 <main+0x68>)
 80002d6:	681b      	ldr	r3, [r3, #0]
 80002d8:	681a      	ldr	r2, [r3, #0]
 80002da:	4b03      	ldr	r3, [pc, #12]	@ (80002e8 <main+0x68>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80002e2:	601a      	str	r2, [r3, #0]
		*pEXTIMaskReg &= ~( 1 << 13);
 80002e4:	e7d1      	b.n	800028a <main+0xa>
 80002e6:	bf00      	nop
 80002e8:	20000010 	.word	0x20000010
 80002ec:	20000094 	.word	0x20000094
 80002f0:	0003d08f 	.word	0x0003d08f
 80002f4:	20000098 	.word	0x20000098
 80002f8:	080013a8 	.word	0x080013a8

080002fc <button_init>:

}


void button_init(void)
{
 80002fc:	b480      	push	{r7}
 80002fe:	af00      	add	r7, sp, #0

  *pClkCtrlReg |= ( 1 << 2);
 8000300:	4b19      	ldr	r3, [pc, #100]	@ (8000368 <button_init+0x6c>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	681a      	ldr	r2, [r3, #0]
 8000306:	4b18      	ldr	r3, [pc, #96]	@ (8000368 <button_init+0x6c>)
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	f042 0204 	orr.w	r2, r2, #4
 800030e:	601a      	str	r2, [r3, #0]

  *pClkCtrlRegApb2 |= ( 1 << 0);
 8000310:	4b16      	ldr	r3, [pc, #88]	@ (800036c <button_init+0x70>)
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	681a      	ldr	r2, [r3, #0]
 8000316:	4b15      	ldr	r3, [pc, #84]	@ (800036c <button_init+0x70>)
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	f042 0201 	orr.w	r2, r2, #1
 800031e:	601a      	str	r2, [r3, #0]

  *pGPIOCModeReg &= ~(3 << (13 * 2));
 8000320:	4b13      	ldr	r3, [pc, #76]	@ (8000370 <button_init+0x74>)
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	681a      	ldr	r2, [r3, #0]
 8000326:	4b12      	ldr	r3, [pc, #72]	@ (8000370 <button_init+0x74>)
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 800032e:	601a      	str	r2, [r3, #0]
//  *pSYSCFG_EXTICR4 &= ~(0xF << 4); // 清除 EXTI13 的設定
//  *pSYSCFG_EXTICR4 |= (2 << 4);    // 設定 EXTI13 來自 GPIOC (2)


  *pEXTTIEdgeCtrlReg |= ( 1 << 13);
 8000330:	4b10      	ldr	r3, [pc, #64]	@ (8000374 <button_init+0x78>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	4b0f      	ldr	r3, [pc, #60]	@ (8000374 <button_init+0x78>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800033e:	601a      	str	r2, [r3, #0]

  *pEXTIMaskReg |= ( 1 << 13);
 8000340:	4b0d      	ldr	r3, [pc, #52]	@ (8000378 <button_init+0x7c>)
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	681a      	ldr	r2, [r3, #0]
 8000346:	4b0c      	ldr	r3, [pc, #48]	@ (8000378 <button_init+0x7c>)
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800034e:	601a      	str	r2, [r3, #0]

  *pNVICIRQEnReg |= ( 1 << 8);
 8000350:	4b0a      	ldr	r3, [pc, #40]	@ (800037c <button_init+0x80>)
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	681a      	ldr	r2, [r3, #0]
 8000356:	4b09      	ldr	r3, [pc, #36]	@ (800037c <button_init+0x80>)
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800035e:	601a      	str	r2, [r3, #0]

}
 8000360:	bf00      	nop
 8000362:	46bd      	mov	sp, r7
 8000364:	bc80      	pop	{r7}
 8000366:	4770      	bx	lr
 8000368:	20000004 	.word	0x20000004
 800036c:	20000008 	.word	0x20000008
 8000370:	2000000c 	.word	0x2000000c
 8000374:	20000014 	.word	0x20000014
 8000378:	20000010 	.word	0x20000010
 800037c:	20000018 	.word	0x20000018

08000380 <EXTI15_10_IRQHandler>:

/* This is button interrupt handler*/
void EXTI15_10_IRQHandler(void)
{
 8000380:	b480      	push	{r7}
 8000382:	af00      	add	r7, sp, #0
	//Make this flag SET . if button pressed
  g_button_pressed = 1;
 8000384:	4b07      	ldr	r3, [pc, #28]	@ (80003a4 <EXTI15_10_IRQHandler+0x24>)
 8000386:	2201      	movs	r2, #1
 8000388:	701a      	strb	r2, [r3, #0]

  *pEXTTIPendReg |= ( 1 << 13);
 800038a:	4b07      	ldr	r3, [pc, #28]	@ (80003a8 <EXTI15_10_IRQHandler+0x28>)
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	681a      	ldr	r2, [r3, #0]
 8000390:	4b05      	ldr	r3, [pc, #20]	@ (80003a8 <EXTI15_10_IRQHandler+0x28>)
 8000392:	681b      	ldr	r3, [r3, #0]
 8000394:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8000398:	601a      	str	r2, [r3, #0]
}
 800039a:	bf00      	nop
 800039c:	46bd      	mov	sp, r7
 800039e:	bc80      	pop	{r7}
 80003a0:	4770      	bx	lr
 80003a2:	bf00      	nop
 80003a4:	20000094 	.word	0x20000094
 80003a8:	20000000 	.word	0x20000000

080003ac <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003ac:	b580      	push	{r7, lr}
 80003ae:	b086      	sub	sp, #24
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	60f8      	str	r0, [r7, #12]
 80003b4:	60b9      	str	r1, [r7, #8]
 80003b6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003b8:	2300      	movs	r3, #0
 80003ba:	617b      	str	r3, [r7, #20]
 80003bc:	e00a      	b.n	80003d4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003be:	f3af 8000 	nop.w
 80003c2:	4601      	mov	r1, r0
 80003c4:	68bb      	ldr	r3, [r7, #8]
 80003c6:	1c5a      	adds	r2, r3, #1
 80003c8:	60ba      	str	r2, [r7, #8]
 80003ca:	b2ca      	uxtb	r2, r1
 80003cc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ce:	697b      	ldr	r3, [r7, #20]
 80003d0:	3301      	adds	r3, #1
 80003d2:	617b      	str	r3, [r7, #20]
 80003d4:	697a      	ldr	r2, [r7, #20]
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	429a      	cmp	r2, r3
 80003da:	dbf0      	blt.n	80003be <_read+0x12>
  }

  return len;
 80003dc:	687b      	ldr	r3, [r7, #4]
}
 80003de:	4618      	mov	r0, r3
 80003e0:	3718      	adds	r7, #24
 80003e2:	46bd      	mov	sp, r7
 80003e4:	bd80      	pop	{r7, pc}

080003e6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003e6:	b580      	push	{r7, lr}
 80003e8:	b086      	sub	sp, #24
 80003ea:	af00      	add	r7, sp, #0
 80003ec:	60f8      	str	r0, [r7, #12]
 80003ee:	60b9      	str	r1, [r7, #8]
 80003f0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f2:	2300      	movs	r3, #0
 80003f4:	617b      	str	r3, [r7, #20]
 80003f6:	e009      	b.n	800040c <_write+0x26>
  {
    __io_putchar(*ptr++);
 80003f8:	68bb      	ldr	r3, [r7, #8]
 80003fa:	1c5a      	adds	r2, r3, #1
 80003fc:	60ba      	str	r2, [r7, #8]
 80003fe:	781b      	ldrb	r3, [r3, #0]
 8000400:	4618      	mov	r0, r3
 8000402:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000406:	697b      	ldr	r3, [r7, #20]
 8000408:	3301      	adds	r3, #1
 800040a:	617b      	str	r3, [r7, #20]
 800040c:	697a      	ldr	r2, [r7, #20]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	429a      	cmp	r2, r3
 8000412:	dbf1      	blt.n	80003f8 <_write+0x12>
  }
  return len;
 8000414:	687b      	ldr	r3, [r7, #4]
}
 8000416:	4618      	mov	r0, r3
 8000418:	3718      	adds	r7, #24
 800041a:	46bd      	mov	sp, r7
 800041c:	bd80      	pop	{r7, pc}

0800041e <_close>:

int _close(int file)
{
 800041e:	b480      	push	{r7}
 8000420:	b083      	sub	sp, #12
 8000422:	af00      	add	r7, sp, #0
 8000424:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000426:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 800042a:	4618      	mov	r0, r3
 800042c:	370c      	adds	r7, #12
 800042e:	46bd      	mov	sp, r7
 8000430:	bc80      	pop	{r7}
 8000432:	4770      	bx	lr

08000434 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000434:	b480      	push	{r7}
 8000436:	b083      	sub	sp, #12
 8000438:	af00      	add	r7, sp, #0
 800043a:	6078      	str	r0, [r7, #4]
 800043c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800043e:	683b      	ldr	r3, [r7, #0]
 8000440:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000444:	605a      	str	r2, [r3, #4]
  return 0;
 8000446:	2300      	movs	r3, #0
}
 8000448:	4618      	mov	r0, r3
 800044a:	370c      	adds	r7, #12
 800044c:	46bd      	mov	sp, r7
 800044e:	bc80      	pop	{r7}
 8000450:	4770      	bx	lr

08000452 <_isatty>:

int _isatty(int file)
{
 8000452:	b480      	push	{r7}
 8000454:	b083      	sub	sp, #12
 8000456:	af00      	add	r7, sp, #0
 8000458:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800045a:	2301      	movs	r3, #1
}
 800045c:	4618      	mov	r0, r3
 800045e:	370c      	adds	r7, #12
 8000460:	46bd      	mov	sp, r7
 8000462:	bc80      	pop	{r7}
 8000464:	4770      	bx	lr

08000466 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000466:	b480      	push	{r7}
 8000468:	b085      	sub	sp, #20
 800046a:	af00      	add	r7, sp, #0
 800046c:	60f8      	str	r0, [r7, #12]
 800046e:	60b9      	str	r1, [r7, #8]
 8000470:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000472:	2300      	movs	r3, #0
}
 8000474:	4618      	mov	r0, r3
 8000476:	3714      	adds	r7, #20
 8000478:	46bd      	mov	sp, r7
 800047a:	bc80      	pop	{r7}
 800047c:	4770      	bx	lr
	...

08000480 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000480:	b580      	push	{r7, lr}
 8000482:	b086      	sub	sp, #24
 8000484:	af00      	add	r7, sp, #0
 8000486:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000488:	4a14      	ldr	r2, [pc, #80]	@ (80004dc <_sbrk+0x5c>)
 800048a:	4b15      	ldr	r3, [pc, #84]	@ (80004e0 <_sbrk+0x60>)
 800048c:	1ad3      	subs	r3, r2, r3
 800048e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000490:	697b      	ldr	r3, [r7, #20]
 8000492:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000494:	4b13      	ldr	r3, [pc, #76]	@ (80004e4 <_sbrk+0x64>)
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	2b00      	cmp	r3, #0
 800049a:	d102      	bne.n	80004a2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800049c:	4b11      	ldr	r3, [pc, #68]	@ (80004e4 <_sbrk+0x64>)
 800049e:	4a12      	ldr	r2, [pc, #72]	@ (80004e8 <_sbrk+0x68>)
 80004a0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004a2:	4b10      	ldr	r3, [pc, #64]	@ (80004e4 <_sbrk+0x64>)
 80004a4:	681a      	ldr	r2, [r3, #0]
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	4413      	add	r3, r2
 80004aa:	693a      	ldr	r2, [r7, #16]
 80004ac:	429a      	cmp	r2, r3
 80004ae:	d207      	bcs.n	80004c0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004b0:	f000 f922 	bl	80006f8 <__errno>
 80004b4:	4603      	mov	r3, r0
 80004b6:	220c      	movs	r2, #12
 80004b8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004ba:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80004be:	e009      	b.n	80004d4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004c0:	4b08      	ldr	r3, [pc, #32]	@ (80004e4 <_sbrk+0x64>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004c6:	4b07      	ldr	r3, [pc, #28]	@ (80004e4 <_sbrk+0x64>)
 80004c8:	681a      	ldr	r2, [r3, #0]
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	4413      	add	r3, r2
 80004ce:	4a05      	ldr	r2, [pc, #20]	@ (80004e4 <_sbrk+0x64>)
 80004d0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004d2:	68fb      	ldr	r3, [r7, #12]
}
 80004d4:	4618      	mov	r0, r3
 80004d6:	3718      	adds	r7, #24
 80004d8:	46bd      	mov	sp, r7
 80004da:	bd80      	pop	{r7, pc}
 80004dc:	20018000 	.word	0x20018000
 80004e0:	00000400 	.word	0x00000400
 80004e4:	2000009c 	.word	0x2000009c
 80004e8:	200001f0 	.word	0x200001f0

080004ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004ec:	480d      	ldr	r0, [pc, #52]	@ (8000524 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ee:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004f0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004f4:	480c      	ldr	r0, [pc, #48]	@ (8000528 <LoopForever+0x6>)
  ldr r1, =_edata
 80004f6:	490d      	ldr	r1, [pc, #52]	@ (800052c <LoopForever+0xa>)
  ldr r2, =_sidata
 80004f8:	4a0d      	ldr	r2, [pc, #52]	@ (8000530 <LoopForever+0xe>)
  movs r3, #0
 80004fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004fc:	e002      	b.n	8000504 <LoopCopyDataInit>

080004fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000500:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000502:	3304      	adds	r3, #4

08000504 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000504:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000506:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000508:	d3f9      	bcc.n	80004fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800050a:	4a0a      	ldr	r2, [pc, #40]	@ (8000534 <LoopForever+0x12>)
  ldr r4, =_ebss
 800050c:	4c0a      	ldr	r4, [pc, #40]	@ (8000538 <LoopForever+0x16>)
  movs r3, #0
 800050e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000510:	e001      	b.n	8000516 <LoopFillZerobss>

08000512 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000512:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000514:	3204      	adds	r2, #4

08000516 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000516:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000518:	d3fb      	bcc.n	8000512 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800051a:	f000 f8f3 	bl	8000704 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800051e:	f7ff feaf 	bl	8000280 <main>

08000522 <LoopForever>:

LoopForever:
  b LoopForever
 8000522:	e7fe      	b.n	8000522 <LoopForever>
  ldr   r0, =_estack
 8000524:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000528:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800052c:	20000078 	.word	0x20000078
  ldr r2, =_sidata
 8000530:	08001404 	.word	0x08001404
  ldr r2, =_sbss
 8000534:	20000078 	.word	0x20000078
  ldr r4, =_ebss
 8000538:	200001ec 	.word	0x200001ec

0800053c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800053c:	e7fe      	b.n	800053c <ADC1_2_IRQHandler>
	...

08000540 <std>:
 8000540:	2300      	movs	r3, #0
 8000542:	b510      	push	{r4, lr}
 8000544:	4604      	mov	r4, r0
 8000546:	e9c0 3300 	strd	r3, r3, [r0]
 800054a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800054e:	6083      	str	r3, [r0, #8]
 8000550:	8181      	strh	r1, [r0, #12]
 8000552:	6643      	str	r3, [r0, #100]	@ 0x64
 8000554:	81c2      	strh	r2, [r0, #14]
 8000556:	6183      	str	r3, [r0, #24]
 8000558:	4619      	mov	r1, r3
 800055a:	2208      	movs	r2, #8
 800055c:	305c      	adds	r0, #92	@ 0x5c
 800055e:	f000 f8c3 	bl	80006e8 <memset>
 8000562:	4b0d      	ldr	r3, [pc, #52]	@ (8000598 <std+0x58>)
 8000564:	6263      	str	r3, [r4, #36]	@ 0x24
 8000566:	4b0d      	ldr	r3, [pc, #52]	@ (800059c <std+0x5c>)
 8000568:	62a3      	str	r3, [r4, #40]	@ 0x28
 800056a:	4b0d      	ldr	r3, [pc, #52]	@ (80005a0 <std+0x60>)
 800056c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800056e:	4b0d      	ldr	r3, [pc, #52]	@ (80005a4 <std+0x64>)
 8000570:	6323      	str	r3, [r4, #48]	@ 0x30
 8000572:	4b0d      	ldr	r3, [pc, #52]	@ (80005a8 <std+0x68>)
 8000574:	6224      	str	r4, [r4, #32]
 8000576:	429c      	cmp	r4, r3
 8000578:	d006      	beq.n	8000588 <std+0x48>
 800057a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800057e:	4294      	cmp	r4, r2
 8000580:	d002      	beq.n	8000588 <std+0x48>
 8000582:	33d0      	adds	r3, #208	@ 0xd0
 8000584:	429c      	cmp	r4, r3
 8000586:	d105      	bne.n	8000594 <std+0x54>
 8000588:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800058c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000590:	f000 b8dc 	b.w	800074c <__retarget_lock_init_recursive>
 8000594:	bd10      	pop	{r4, pc}
 8000596:	bf00      	nop
 8000598:	08000f99 	.word	0x08000f99
 800059c:	08000fbb 	.word	0x08000fbb
 80005a0:	08000ff3 	.word	0x08000ff3
 80005a4:	08001017 	.word	0x08001017
 80005a8:	200000a0 	.word	0x200000a0

080005ac <stdio_exit_handler>:
 80005ac:	4a02      	ldr	r2, [pc, #8]	@ (80005b8 <stdio_exit_handler+0xc>)
 80005ae:	4903      	ldr	r1, [pc, #12]	@ (80005bc <stdio_exit_handler+0x10>)
 80005b0:	4803      	ldr	r0, [pc, #12]	@ (80005c0 <stdio_exit_handler+0x14>)
 80005b2:	f000 b869 	b.w	8000688 <_fwalk_sglue>
 80005b6:	bf00      	nop
 80005b8:	2000001c 	.word	0x2000001c
 80005bc:	08000f31 	.word	0x08000f31
 80005c0:	2000002c 	.word	0x2000002c

080005c4 <cleanup_stdio>:
 80005c4:	6841      	ldr	r1, [r0, #4]
 80005c6:	4b0c      	ldr	r3, [pc, #48]	@ (80005f8 <cleanup_stdio+0x34>)
 80005c8:	4299      	cmp	r1, r3
 80005ca:	b510      	push	{r4, lr}
 80005cc:	4604      	mov	r4, r0
 80005ce:	d001      	beq.n	80005d4 <cleanup_stdio+0x10>
 80005d0:	f000 fcae 	bl	8000f30 <_fflush_r>
 80005d4:	68a1      	ldr	r1, [r4, #8]
 80005d6:	4b09      	ldr	r3, [pc, #36]	@ (80005fc <cleanup_stdio+0x38>)
 80005d8:	4299      	cmp	r1, r3
 80005da:	d002      	beq.n	80005e2 <cleanup_stdio+0x1e>
 80005dc:	4620      	mov	r0, r4
 80005de:	f000 fca7 	bl	8000f30 <_fflush_r>
 80005e2:	68e1      	ldr	r1, [r4, #12]
 80005e4:	4b06      	ldr	r3, [pc, #24]	@ (8000600 <cleanup_stdio+0x3c>)
 80005e6:	4299      	cmp	r1, r3
 80005e8:	d004      	beq.n	80005f4 <cleanup_stdio+0x30>
 80005ea:	4620      	mov	r0, r4
 80005ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005f0:	f000 bc9e 	b.w	8000f30 <_fflush_r>
 80005f4:	bd10      	pop	{r4, pc}
 80005f6:	bf00      	nop
 80005f8:	200000a0 	.word	0x200000a0
 80005fc:	20000108 	.word	0x20000108
 8000600:	20000170 	.word	0x20000170

08000604 <global_stdio_init.part.0>:
 8000604:	b510      	push	{r4, lr}
 8000606:	4b0b      	ldr	r3, [pc, #44]	@ (8000634 <global_stdio_init.part.0+0x30>)
 8000608:	4c0b      	ldr	r4, [pc, #44]	@ (8000638 <global_stdio_init.part.0+0x34>)
 800060a:	4a0c      	ldr	r2, [pc, #48]	@ (800063c <global_stdio_init.part.0+0x38>)
 800060c:	601a      	str	r2, [r3, #0]
 800060e:	4620      	mov	r0, r4
 8000610:	2200      	movs	r2, #0
 8000612:	2104      	movs	r1, #4
 8000614:	f7ff ff94 	bl	8000540 <std>
 8000618:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800061c:	2201      	movs	r2, #1
 800061e:	2109      	movs	r1, #9
 8000620:	f7ff ff8e 	bl	8000540 <std>
 8000624:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000628:	2202      	movs	r2, #2
 800062a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800062e:	2112      	movs	r1, #18
 8000630:	f7ff bf86 	b.w	8000540 <std>
 8000634:	200001d8 	.word	0x200001d8
 8000638:	200000a0 	.word	0x200000a0
 800063c:	080005ad 	.word	0x080005ad

08000640 <__sfp_lock_acquire>:
 8000640:	4801      	ldr	r0, [pc, #4]	@ (8000648 <__sfp_lock_acquire+0x8>)
 8000642:	f000 b884 	b.w	800074e <__retarget_lock_acquire_recursive>
 8000646:	bf00      	nop
 8000648:	200001dd 	.word	0x200001dd

0800064c <__sfp_lock_release>:
 800064c:	4801      	ldr	r0, [pc, #4]	@ (8000654 <__sfp_lock_release+0x8>)
 800064e:	f000 b87f 	b.w	8000750 <__retarget_lock_release_recursive>
 8000652:	bf00      	nop
 8000654:	200001dd 	.word	0x200001dd

08000658 <__sinit>:
 8000658:	b510      	push	{r4, lr}
 800065a:	4604      	mov	r4, r0
 800065c:	f7ff fff0 	bl	8000640 <__sfp_lock_acquire>
 8000660:	6a23      	ldr	r3, [r4, #32]
 8000662:	b11b      	cbz	r3, 800066c <__sinit+0x14>
 8000664:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000668:	f7ff bff0 	b.w	800064c <__sfp_lock_release>
 800066c:	4b04      	ldr	r3, [pc, #16]	@ (8000680 <__sinit+0x28>)
 800066e:	6223      	str	r3, [r4, #32]
 8000670:	4b04      	ldr	r3, [pc, #16]	@ (8000684 <__sinit+0x2c>)
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	2b00      	cmp	r3, #0
 8000676:	d1f5      	bne.n	8000664 <__sinit+0xc>
 8000678:	f7ff ffc4 	bl	8000604 <global_stdio_init.part.0>
 800067c:	e7f2      	b.n	8000664 <__sinit+0xc>
 800067e:	bf00      	nop
 8000680:	080005c5 	.word	0x080005c5
 8000684:	200001d8 	.word	0x200001d8

08000688 <_fwalk_sglue>:
 8000688:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800068c:	4607      	mov	r7, r0
 800068e:	4688      	mov	r8, r1
 8000690:	4614      	mov	r4, r2
 8000692:	2600      	movs	r6, #0
 8000694:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000698:	f1b9 0901 	subs.w	r9, r9, #1
 800069c:	d505      	bpl.n	80006aa <_fwalk_sglue+0x22>
 800069e:	6824      	ldr	r4, [r4, #0]
 80006a0:	2c00      	cmp	r4, #0
 80006a2:	d1f7      	bne.n	8000694 <_fwalk_sglue+0xc>
 80006a4:	4630      	mov	r0, r6
 80006a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006aa:	89ab      	ldrh	r3, [r5, #12]
 80006ac:	2b01      	cmp	r3, #1
 80006ae:	d907      	bls.n	80006c0 <_fwalk_sglue+0x38>
 80006b0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006b4:	3301      	adds	r3, #1
 80006b6:	d003      	beq.n	80006c0 <_fwalk_sglue+0x38>
 80006b8:	4629      	mov	r1, r5
 80006ba:	4638      	mov	r0, r7
 80006bc:	47c0      	blx	r8
 80006be:	4306      	orrs	r6, r0
 80006c0:	3568      	adds	r5, #104	@ 0x68
 80006c2:	e7e9      	b.n	8000698 <_fwalk_sglue+0x10>

080006c4 <iprintf>:
 80006c4:	b40f      	push	{r0, r1, r2, r3}
 80006c6:	b507      	push	{r0, r1, r2, lr}
 80006c8:	4906      	ldr	r1, [pc, #24]	@ (80006e4 <iprintf+0x20>)
 80006ca:	ab04      	add	r3, sp, #16
 80006cc:	6808      	ldr	r0, [r1, #0]
 80006ce:	f853 2b04 	ldr.w	r2, [r3], #4
 80006d2:	6881      	ldr	r1, [r0, #8]
 80006d4:	9301      	str	r3, [sp, #4]
 80006d6:	f000 f863 	bl	80007a0 <_vfiprintf_r>
 80006da:	b003      	add	sp, #12
 80006dc:	f85d eb04 	ldr.w	lr, [sp], #4
 80006e0:	b004      	add	sp, #16
 80006e2:	4770      	bx	lr
 80006e4:	20000028 	.word	0x20000028

080006e8 <memset>:
 80006e8:	4402      	add	r2, r0
 80006ea:	4603      	mov	r3, r0
 80006ec:	4293      	cmp	r3, r2
 80006ee:	d100      	bne.n	80006f2 <memset+0xa>
 80006f0:	4770      	bx	lr
 80006f2:	f803 1b01 	strb.w	r1, [r3], #1
 80006f6:	e7f9      	b.n	80006ec <memset+0x4>

080006f8 <__errno>:
 80006f8:	4b01      	ldr	r3, [pc, #4]	@ (8000700 <__errno+0x8>)
 80006fa:	6818      	ldr	r0, [r3, #0]
 80006fc:	4770      	bx	lr
 80006fe:	bf00      	nop
 8000700:	20000028 	.word	0x20000028

08000704 <__libc_init_array>:
 8000704:	b570      	push	{r4, r5, r6, lr}
 8000706:	4d0d      	ldr	r5, [pc, #52]	@ (800073c <__libc_init_array+0x38>)
 8000708:	4c0d      	ldr	r4, [pc, #52]	@ (8000740 <__libc_init_array+0x3c>)
 800070a:	1b64      	subs	r4, r4, r5
 800070c:	10a4      	asrs	r4, r4, #2
 800070e:	2600      	movs	r6, #0
 8000710:	42a6      	cmp	r6, r4
 8000712:	d109      	bne.n	8000728 <__libc_init_array+0x24>
 8000714:	4d0b      	ldr	r5, [pc, #44]	@ (8000744 <__libc_init_array+0x40>)
 8000716:	4c0c      	ldr	r4, [pc, #48]	@ (8000748 <__libc_init_array+0x44>)
 8000718:	f000 fe3a 	bl	8001390 <_init>
 800071c:	1b64      	subs	r4, r4, r5
 800071e:	10a4      	asrs	r4, r4, #2
 8000720:	2600      	movs	r6, #0
 8000722:	42a6      	cmp	r6, r4
 8000724:	d105      	bne.n	8000732 <__libc_init_array+0x2e>
 8000726:	bd70      	pop	{r4, r5, r6, pc}
 8000728:	f855 3b04 	ldr.w	r3, [r5], #4
 800072c:	4798      	blx	r3
 800072e:	3601      	adds	r6, #1
 8000730:	e7ee      	b.n	8000710 <__libc_init_array+0xc>
 8000732:	f855 3b04 	ldr.w	r3, [r5], #4
 8000736:	4798      	blx	r3
 8000738:	3601      	adds	r6, #1
 800073a:	e7f2      	b.n	8000722 <__libc_init_array+0x1e>
 800073c:	080013fc 	.word	0x080013fc
 8000740:	080013fc 	.word	0x080013fc
 8000744:	080013fc 	.word	0x080013fc
 8000748:	08001400 	.word	0x08001400

0800074c <__retarget_lock_init_recursive>:
 800074c:	4770      	bx	lr

0800074e <__retarget_lock_acquire_recursive>:
 800074e:	4770      	bx	lr

08000750 <__retarget_lock_release_recursive>:
 8000750:	4770      	bx	lr

08000752 <__sfputc_r>:
 8000752:	6893      	ldr	r3, [r2, #8]
 8000754:	3b01      	subs	r3, #1
 8000756:	2b00      	cmp	r3, #0
 8000758:	b410      	push	{r4}
 800075a:	6093      	str	r3, [r2, #8]
 800075c:	da07      	bge.n	800076e <__sfputc_r+0x1c>
 800075e:	6994      	ldr	r4, [r2, #24]
 8000760:	42a3      	cmp	r3, r4
 8000762:	db01      	blt.n	8000768 <__sfputc_r+0x16>
 8000764:	290a      	cmp	r1, #10
 8000766:	d102      	bne.n	800076e <__sfputc_r+0x1c>
 8000768:	bc10      	pop	{r4}
 800076a:	f000 bc58 	b.w	800101e <__swbuf_r>
 800076e:	6813      	ldr	r3, [r2, #0]
 8000770:	1c58      	adds	r0, r3, #1
 8000772:	6010      	str	r0, [r2, #0]
 8000774:	7019      	strb	r1, [r3, #0]
 8000776:	4608      	mov	r0, r1
 8000778:	bc10      	pop	{r4}
 800077a:	4770      	bx	lr

0800077c <__sfputs_r>:
 800077c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800077e:	4606      	mov	r6, r0
 8000780:	460f      	mov	r7, r1
 8000782:	4614      	mov	r4, r2
 8000784:	18d5      	adds	r5, r2, r3
 8000786:	42ac      	cmp	r4, r5
 8000788:	d101      	bne.n	800078e <__sfputs_r+0x12>
 800078a:	2000      	movs	r0, #0
 800078c:	e007      	b.n	800079e <__sfputs_r+0x22>
 800078e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000792:	463a      	mov	r2, r7
 8000794:	4630      	mov	r0, r6
 8000796:	f7ff ffdc 	bl	8000752 <__sfputc_r>
 800079a:	1c43      	adds	r3, r0, #1
 800079c:	d1f3      	bne.n	8000786 <__sfputs_r+0xa>
 800079e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080007a0 <_vfiprintf_r>:
 80007a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80007a4:	460d      	mov	r5, r1
 80007a6:	b09d      	sub	sp, #116	@ 0x74
 80007a8:	4614      	mov	r4, r2
 80007aa:	4698      	mov	r8, r3
 80007ac:	4606      	mov	r6, r0
 80007ae:	b118      	cbz	r0, 80007b8 <_vfiprintf_r+0x18>
 80007b0:	6a03      	ldr	r3, [r0, #32]
 80007b2:	b90b      	cbnz	r3, 80007b8 <_vfiprintf_r+0x18>
 80007b4:	f7ff ff50 	bl	8000658 <__sinit>
 80007b8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80007ba:	07d9      	lsls	r1, r3, #31
 80007bc:	d405      	bmi.n	80007ca <_vfiprintf_r+0x2a>
 80007be:	89ab      	ldrh	r3, [r5, #12]
 80007c0:	059a      	lsls	r2, r3, #22
 80007c2:	d402      	bmi.n	80007ca <_vfiprintf_r+0x2a>
 80007c4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80007c6:	f7ff ffc2 	bl	800074e <__retarget_lock_acquire_recursive>
 80007ca:	89ab      	ldrh	r3, [r5, #12]
 80007cc:	071b      	lsls	r3, r3, #28
 80007ce:	d501      	bpl.n	80007d4 <_vfiprintf_r+0x34>
 80007d0:	692b      	ldr	r3, [r5, #16]
 80007d2:	b99b      	cbnz	r3, 80007fc <_vfiprintf_r+0x5c>
 80007d4:	4629      	mov	r1, r5
 80007d6:	4630      	mov	r0, r6
 80007d8:	f000 fc60 	bl	800109c <__swsetup_r>
 80007dc:	b170      	cbz	r0, 80007fc <_vfiprintf_r+0x5c>
 80007de:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80007e0:	07dc      	lsls	r4, r3, #31
 80007e2:	d504      	bpl.n	80007ee <_vfiprintf_r+0x4e>
 80007e4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80007e8:	b01d      	add	sp, #116	@ 0x74
 80007ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80007ee:	89ab      	ldrh	r3, [r5, #12]
 80007f0:	0598      	lsls	r0, r3, #22
 80007f2:	d4f7      	bmi.n	80007e4 <_vfiprintf_r+0x44>
 80007f4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80007f6:	f7ff ffab 	bl	8000750 <__retarget_lock_release_recursive>
 80007fa:	e7f3      	b.n	80007e4 <_vfiprintf_r+0x44>
 80007fc:	2300      	movs	r3, #0
 80007fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8000800:	2320      	movs	r3, #32
 8000802:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000806:	f8cd 800c 	str.w	r8, [sp, #12]
 800080a:	2330      	movs	r3, #48	@ 0x30
 800080c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80009bc <_vfiprintf_r+0x21c>
 8000810:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000814:	f04f 0901 	mov.w	r9, #1
 8000818:	4623      	mov	r3, r4
 800081a:	469a      	mov	sl, r3
 800081c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000820:	b10a      	cbz	r2, 8000826 <_vfiprintf_r+0x86>
 8000822:	2a25      	cmp	r2, #37	@ 0x25
 8000824:	d1f9      	bne.n	800081a <_vfiprintf_r+0x7a>
 8000826:	ebba 0b04 	subs.w	fp, sl, r4
 800082a:	d00b      	beq.n	8000844 <_vfiprintf_r+0xa4>
 800082c:	465b      	mov	r3, fp
 800082e:	4622      	mov	r2, r4
 8000830:	4629      	mov	r1, r5
 8000832:	4630      	mov	r0, r6
 8000834:	f7ff ffa2 	bl	800077c <__sfputs_r>
 8000838:	3001      	adds	r0, #1
 800083a:	f000 80a7 	beq.w	800098c <_vfiprintf_r+0x1ec>
 800083e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000840:	445a      	add	r2, fp
 8000842:	9209      	str	r2, [sp, #36]	@ 0x24
 8000844:	f89a 3000 	ldrb.w	r3, [sl]
 8000848:	2b00      	cmp	r3, #0
 800084a:	f000 809f 	beq.w	800098c <_vfiprintf_r+0x1ec>
 800084e:	2300      	movs	r3, #0
 8000850:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000854:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000858:	f10a 0a01 	add.w	sl, sl, #1
 800085c:	9304      	str	r3, [sp, #16]
 800085e:	9307      	str	r3, [sp, #28]
 8000860:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000864:	931a      	str	r3, [sp, #104]	@ 0x68
 8000866:	4654      	mov	r4, sl
 8000868:	2205      	movs	r2, #5
 800086a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800086e:	4853      	ldr	r0, [pc, #332]	@ (80009bc <_vfiprintf_r+0x21c>)
 8000870:	f7ff fcb6 	bl	80001e0 <memchr>
 8000874:	9a04      	ldr	r2, [sp, #16]
 8000876:	b9d8      	cbnz	r0, 80008b0 <_vfiprintf_r+0x110>
 8000878:	06d1      	lsls	r1, r2, #27
 800087a:	bf44      	itt	mi
 800087c:	2320      	movmi	r3, #32
 800087e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000882:	0713      	lsls	r3, r2, #28
 8000884:	bf44      	itt	mi
 8000886:	232b      	movmi	r3, #43	@ 0x2b
 8000888:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800088c:	f89a 3000 	ldrb.w	r3, [sl]
 8000890:	2b2a      	cmp	r3, #42	@ 0x2a
 8000892:	d015      	beq.n	80008c0 <_vfiprintf_r+0x120>
 8000894:	9a07      	ldr	r2, [sp, #28]
 8000896:	4654      	mov	r4, sl
 8000898:	2000      	movs	r0, #0
 800089a:	f04f 0c0a 	mov.w	ip, #10
 800089e:	4621      	mov	r1, r4
 80008a0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80008a4:	3b30      	subs	r3, #48	@ 0x30
 80008a6:	2b09      	cmp	r3, #9
 80008a8:	d94b      	bls.n	8000942 <_vfiprintf_r+0x1a2>
 80008aa:	b1b0      	cbz	r0, 80008da <_vfiprintf_r+0x13a>
 80008ac:	9207      	str	r2, [sp, #28]
 80008ae:	e014      	b.n	80008da <_vfiprintf_r+0x13a>
 80008b0:	eba0 0308 	sub.w	r3, r0, r8
 80008b4:	fa09 f303 	lsl.w	r3, r9, r3
 80008b8:	4313      	orrs	r3, r2
 80008ba:	9304      	str	r3, [sp, #16]
 80008bc:	46a2      	mov	sl, r4
 80008be:	e7d2      	b.n	8000866 <_vfiprintf_r+0xc6>
 80008c0:	9b03      	ldr	r3, [sp, #12]
 80008c2:	1d19      	adds	r1, r3, #4
 80008c4:	681b      	ldr	r3, [r3, #0]
 80008c6:	9103      	str	r1, [sp, #12]
 80008c8:	2b00      	cmp	r3, #0
 80008ca:	bfbb      	ittet	lt
 80008cc:	425b      	neglt	r3, r3
 80008ce:	f042 0202 	orrlt.w	r2, r2, #2
 80008d2:	9307      	strge	r3, [sp, #28]
 80008d4:	9307      	strlt	r3, [sp, #28]
 80008d6:	bfb8      	it	lt
 80008d8:	9204      	strlt	r2, [sp, #16]
 80008da:	7823      	ldrb	r3, [r4, #0]
 80008dc:	2b2e      	cmp	r3, #46	@ 0x2e
 80008de:	d10a      	bne.n	80008f6 <_vfiprintf_r+0x156>
 80008e0:	7863      	ldrb	r3, [r4, #1]
 80008e2:	2b2a      	cmp	r3, #42	@ 0x2a
 80008e4:	d132      	bne.n	800094c <_vfiprintf_r+0x1ac>
 80008e6:	9b03      	ldr	r3, [sp, #12]
 80008e8:	1d1a      	adds	r2, r3, #4
 80008ea:	681b      	ldr	r3, [r3, #0]
 80008ec:	9203      	str	r2, [sp, #12]
 80008ee:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80008f2:	3402      	adds	r4, #2
 80008f4:	9305      	str	r3, [sp, #20]
 80008f6:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 80009c0 <_vfiprintf_r+0x220>
 80008fa:	7821      	ldrb	r1, [r4, #0]
 80008fc:	2203      	movs	r2, #3
 80008fe:	4650      	mov	r0, sl
 8000900:	f7ff fc6e 	bl	80001e0 <memchr>
 8000904:	b138      	cbz	r0, 8000916 <_vfiprintf_r+0x176>
 8000906:	9b04      	ldr	r3, [sp, #16]
 8000908:	eba0 000a 	sub.w	r0, r0, sl
 800090c:	2240      	movs	r2, #64	@ 0x40
 800090e:	4082      	lsls	r2, r0
 8000910:	4313      	orrs	r3, r2
 8000912:	3401      	adds	r4, #1
 8000914:	9304      	str	r3, [sp, #16]
 8000916:	f814 1b01 	ldrb.w	r1, [r4], #1
 800091a:	482a      	ldr	r0, [pc, #168]	@ (80009c4 <_vfiprintf_r+0x224>)
 800091c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000920:	2206      	movs	r2, #6
 8000922:	f7ff fc5d 	bl	80001e0 <memchr>
 8000926:	2800      	cmp	r0, #0
 8000928:	d03f      	beq.n	80009aa <_vfiprintf_r+0x20a>
 800092a:	4b27      	ldr	r3, [pc, #156]	@ (80009c8 <_vfiprintf_r+0x228>)
 800092c:	bb1b      	cbnz	r3, 8000976 <_vfiprintf_r+0x1d6>
 800092e:	9b03      	ldr	r3, [sp, #12]
 8000930:	3307      	adds	r3, #7
 8000932:	f023 0307 	bic.w	r3, r3, #7
 8000936:	3308      	adds	r3, #8
 8000938:	9303      	str	r3, [sp, #12]
 800093a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800093c:	443b      	add	r3, r7
 800093e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000940:	e76a      	b.n	8000818 <_vfiprintf_r+0x78>
 8000942:	fb0c 3202 	mla	r2, ip, r2, r3
 8000946:	460c      	mov	r4, r1
 8000948:	2001      	movs	r0, #1
 800094a:	e7a8      	b.n	800089e <_vfiprintf_r+0xfe>
 800094c:	2300      	movs	r3, #0
 800094e:	3401      	adds	r4, #1
 8000950:	9305      	str	r3, [sp, #20]
 8000952:	4619      	mov	r1, r3
 8000954:	f04f 0c0a 	mov.w	ip, #10
 8000958:	4620      	mov	r0, r4
 800095a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800095e:	3a30      	subs	r2, #48	@ 0x30
 8000960:	2a09      	cmp	r2, #9
 8000962:	d903      	bls.n	800096c <_vfiprintf_r+0x1cc>
 8000964:	2b00      	cmp	r3, #0
 8000966:	d0c6      	beq.n	80008f6 <_vfiprintf_r+0x156>
 8000968:	9105      	str	r1, [sp, #20]
 800096a:	e7c4      	b.n	80008f6 <_vfiprintf_r+0x156>
 800096c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000970:	4604      	mov	r4, r0
 8000972:	2301      	movs	r3, #1
 8000974:	e7f0      	b.n	8000958 <_vfiprintf_r+0x1b8>
 8000976:	ab03      	add	r3, sp, #12
 8000978:	9300      	str	r3, [sp, #0]
 800097a:	462a      	mov	r2, r5
 800097c:	4b13      	ldr	r3, [pc, #76]	@ (80009cc <_vfiprintf_r+0x22c>)
 800097e:	a904      	add	r1, sp, #16
 8000980:	4630      	mov	r0, r6
 8000982:	f3af 8000 	nop.w
 8000986:	4607      	mov	r7, r0
 8000988:	1c78      	adds	r0, r7, #1
 800098a:	d1d6      	bne.n	800093a <_vfiprintf_r+0x19a>
 800098c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800098e:	07d9      	lsls	r1, r3, #31
 8000990:	d405      	bmi.n	800099e <_vfiprintf_r+0x1fe>
 8000992:	89ab      	ldrh	r3, [r5, #12]
 8000994:	059a      	lsls	r2, r3, #22
 8000996:	d402      	bmi.n	800099e <_vfiprintf_r+0x1fe>
 8000998:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800099a:	f7ff fed9 	bl	8000750 <__retarget_lock_release_recursive>
 800099e:	89ab      	ldrh	r3, [r5, #12]
 80009a0:	065b      	lsls	r3, r3, #25
 80009a2:	f53f af1f 	bmi.w	80007e4 <_vfiprintf_r+0x44>
 80009a6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80009a8:	e71e      	b.n	80007e8 <_vfiprintf_r+0x48>
 80009aa:	ab03      	add	r3, sp, #12
 80009ac:	9300      	str	r3, [sp, #0]
 80009ae:	462a      	mov	r2, r5
 80009b0:	4b06      	ldr	r3, [pc, #24]	@ (80009cc <_vfiprintf_r+0x22c>)
 80009b2:	a904      	add	r1, sp, #16
 80009b4:	4630      	mov	r0, r6
 80009b6:	f000 f91b 	bl	8000bf0 <_printf_i>
 80009ba:	e7e4      	b.n	8000986 <_vfiprintf_r+0x1e6>
 80009bc:	080013c1 	.word	0x080013c1
 80009c0:	080013c7 	.word	0x080013c7
 80009c4:	080013cb 	.word	0x080013cb
 80009c8:	00000000 	.word	0x00000000
 80009cc:	0800077d 	.word	0x0800077d

080009d0 <sbrk_aligned>:
 80009d0:	b570      	push	{r4, r5, r6, lr}
 80009d2:	4e0f      	ldr	r6, [pc, #60]	@ (8000a10 <sbrk_aligned+0x40>)
 80009d4:	460c      	mov	r4, r1
 80009d6:	6831      	ldr	r1, [r6, #0]
 80009d8:	4605      	mov	r5, r0
 80009da:	b911      	cbnz	r1, 80009e2 <sbrk_aligned+0x12>
 80009dc:	f000 fc6c 	bl	80012b8 <_sbrk_r>
 80009e0:	6030      	str	r0, [r6, #0]
 80009e2:	4621      	mov	r1, r4
 80009e4:	4628      	mov	r0, r5
 80009e6:	f000 fc67 	bl	80012b8 <_sbrk_r>
 80009ea:	1c43      	adds	r3, r0, #1
 80009ec:	d103      	bne.n	80009f6 <sbrk_aligned+0x26>
 80009ee:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 80009f2:	4620      	mov	r0, r4
 80009f4:	bd70      	pop	{r4, r5, r6, pc}
 80009f6:	1cc4      	adds	r4, r0, #3
 80009f8:	f024 0403 	bic.w	r4, r4, #3
 80009fc:	42a0      	cmp	r0, r4
 80009fe:	d0f8      	beq.n	80009f2 <sbrk_aligned+0x22>
 8000a00:	1a21      	subs	r1, r4, r0
 8000a02:	4628      	mov	r0, r5
 8000a04:	f000 fc58 	bl	80012b8 <_sbrk_r>
 8000a08:	3001      	adds	r0, #1
 8000a0a:	d1f2      	bne.n	80009f2 <sbrk_aligned+0x22>
 8000a0c:	e7ef      	b.n	80009ee <sbrk_aligned+0x1e>
 8000a0e:	bf00      	nop
 8000a10:	200001e0 	.word	0x200001e0

08000a14 <_malloc_r>:
 8000a14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a18:	1ccd      	adds	r5, r1, #3
 8000a1a:	f025 0503 	bic.w	r5, r5, #3
 8000a1e:	3508      	adds	r5, #8
 8000a20:	2d0c      	cmp	r5, #12
 8000a22:	bf38      	it	cc
 8000a24:	250c      	movcc	r5, #12
 8000a26:	2d00      	cmp	r5, #0
 8000a28:	4606      	mov	r6, r0
 8000a2a:	db01      	blt.n	8000a30 <_malloc_r+0x1c>
 8000a2c:	42a9      	cmp	r1, r5
 8000a2e:	d904      	bls.n	8000a3a <_malloc_r+0x26>
 8000a30:	230c      	movs	r3, #12
 8000a32:	6033      	str	r3, [r6, #0]
 8000a34:	2000      	movs	r0, #0
 8000a36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a3a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000b10 <_malloc_r+0xfc>
 8000a3e:	f000 fa9f 	bl	8000f80 <__malloc_lock>
 8000a42:	f8d8 3000 	ldr.w	r3, [r8]
 8000a46:	461c      	mov	r4, r3
 8000a48:	bb44      	cbnz	r4, 8000a9c <_malloc_r+0x88>
 8000a4a:	4629      	mov	r1, r5
 8000a4c:	4630      	mov	r0, r6
 8000a4e:	f7ff ffbf 	bl	80009d0 <sbrk_aligned>
 8000a52:	1c43      	adds	r3, r0, #1
 8000a54:	4604      	mov	r4, r0
 8000a56:	d158      	bne.n	8000b0a <_malloc_r+0xf6>
 8000a58:	f8d8 4000 	ldr.w	r4, [r8]
 8000a5c:	4627      	mov	r7, r4
 8000a5e:	2f00      	cmp	r7, #0
 8000a60:	d143      	bne.n	8000aea <_malloc_r+0xd6>
 8000a62:	2c00      	cmp	r4, #0
 8000a64:	d04b      	beq.n	8000afe <_malloc_r+0xea>
 8000a66:	6823      	ldr	r3, [r4, #0]
 8000a68:	4639      	mov	r1, r7
 8000a6a:	4630      	mov	r0, r6
 8000a6c:	eb04 0903 	add.w	r9, r4, r3
 8000a70:	f000 fc22 	bl	80012b8 <_sbrk_r>
 8000a74:	4581      	cmp	r9, r0
 8000a76:	d142      	bne.n	8000afe <_malloc_r+0xea>
 8000a78:	6821      	ldr	r1, [r4, #0]
 8000a7a:	1a6d      	subs	r5, r5, r1
 8000a7c:	4629      	mov	r1, r5
 8000a7e:	4630      	mov	r0, r6
 8000a80:	f7ff ffa6 	bl	80009d0 <sbrk_aligned>
 8000a84:	3001      	adds	r0, #1
 8000a86:	d03a      	beq.n	8000afe <_malloc_r+0xea>
 8000a88:	6823      	ldr	r3, [r4, #0]
 8000a8a:	442b      	add	r3, r5
 8000a8c:	6023      	str	r3, [r4, #0]
 8000a8e:	f8d8 3000 	ldr.w	r3, [r8]
 8000a92:	685a      	ldr	r2, [r3, #4]
 8000a94:	bb62      	cbnz	r2, 8000af0 <_malloc_r+0xdc>
 8000a96:	f8c8 7000 	str.w	r7, [r8]
 8000a9a:	e00f      	b.n	8000abc <_malloc_r+0xa8>
 8000a9c:	6822      	ldr	r2, [r4, #0]
 8000a9e:	1b52      	subs	r2, r2, r5
 8000aa0:	d420      	bmi.n	8000ae4 <_malloc_r+0xd0>
 8000aa2:	2a0b      	cmp	r2, #11
 8000aa4:	d917      	bls.n	8000ad6 <_malloc_r+0xc2>
 8000aa6:	1961      	adds	r1, r4, r5
 8000aa8:	42a3      	cmp	r3, r4
 8000aaa:	6025      	str	r5, [r4, #0]
 8000aac:	bf18      	it	ne
 8000aae:	6059      	strne	r1, [r3, #4]
 8000ab0:	6863      	ldr	r3, [r4, #4]
 8000ab2:	bf08      	it	eq
 8000ab4:	f8c8 1000 	streq.w	r1, [r8]
 8000ab8:	5162      	str	r2, [r4, r5]
 8000aba:	604b      	str	r3, [r1, #4]
 8000abc:	4630      	mov	r0, r6
 8000abe:	f000 fa65 	bl	8000f8c <__malloc_unlock>
 8000ac2:	f104 000b 	add.w	r0, r4, #11
 8000ac6:	1d23      	adds	r3, r4, #4
 8000ac8:	f020 0007 	bic.w	r0, r0, #7
 8000acc:	1ac2      	subs	r2, r0, r3
 8000ace:	bf1c      	itt	ne
 8000ad0:	1a1b      	subne	r3, r3, r0
 8000ad2:	50a3      	strne	r3, [r4, r2]
 8000ad4:	e7af      	b.n	8000a36 <_malloc_r+0x22>
 8000ad6:	6862      	ldr	r2, [r4, #4]
 8000ad8:	42a3      	cmp	r3, r4
 8000ada:	bf0c      	ite	eq
 8000adc:	f8c8 2000 	streq.w	r2, [r8]
 8000ae0:	605a      	strne	r2, [r3, #4]
 8000ae2:	e7eb      	b.n	8000abc <_malloc_r+0xa8>
 8000ae4:	4623      	mov	r3, r4
 8000ae6:	6864      	ldr	r4, [r4, #4]
 8000ae8:	e7ae      	b.n	8000a48 <_malloc_r+0x34>
 8000aea:	463c      	mov	r4, r7
 8000aec:	687f      	ldr	r7, [r7, #4]
 8000aee:	e7b6      	b.n	8000a5e <_malloc_r+0x4a>
 8000af0:	461a      	mov	r2, r3
 8000af2:	685b      	ldr	r3, [r3, #4]
 8000af4:	42a3      	cmp	r3, r4
 8000af6:	d1fb      	bne.n	8000af0 <_malloc_r+0xdc>
 8000af8:	2300      	movs	r3, #0
 8000afa:	6053      	str	r3, [r2, #4]
 8000afc:	e7de      	b.n	8000abc <_malloc_r+0xa8>
 8000afe:	230c      	movs	r3, #12
 8000b00:	6033      	str	r3, [r6, #0]
 8000b02:	4630      	mov	r0, r6
 8000b04:	f000 fa42 	bl	8000f8c <__malloc_unlock>
 8000b08:	e794      	b.n	8000a34 <_malloc_r+0x20>
 8000b0a:	6005      	str	r5, [r0, #0]
 8000b0c:	e7d6      	b.n	8000abc <_malloc_r+0xa8>
 8000b0e:	bf00      	nop
 8000b10:	200001e4 	.word	0x200001e4

08000b14 <_printf_common>:
 8000b14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b18:	4616      	mov	r6, r2
 8000b1a:	4698      	mov	r8, r3
 8000b1c:	688a      	ldr	r2, [r1, #8]
 8000b1e:	690b      	ldr	r3, [r1, #16]
 8000b20:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000b24:	4293      	cmp	r3, r2
 8000b26:	bfb8      	it	lt
 8000b28:	4613      	movlt	r3, r2
 8000b2a:	6033      	str	r3, [r6, #0]
 8000b2c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000b30:	4607      	mov	r7, r0
 8000b32:	460c      	mov	r4, r1
 8000b34:	b10a      	cbz	r2, 8000b3a <_printf_common+0x26>
 8000b36:	3301      	adds	r3, #1
 8000b38:	6033      	str	r3, [r6, #0]
 8000b3a:	6823      	ldr	r3, [r4, #0]
 8000b3c:	0699      	lsls	r1, r3, #26
 8000b3e:	bf42      	ittt	mi
 8000b40:	6833      	ldrmi	r3, [r6, #0]
 8000b42:	3302      	addmi	r3, #2
 8000b44:	6033      	strmi	r3, [r6, #0]
 8000b46:	6825      	ldr	r5, [r4, #0]
 8000b48:	f015 0506 	ands.w	r5, r5, #6
 8000b4c:	d106      	bne.n	8000b5c <_printf_common+0x48>
 8000b4e:	f104 0a19 	add.w	sl, r4, #25
 8000b52:	68e3      	ldr	r3, [r4, #12]
 8000b54:	6832      	ldr	r2, [r6, #0]
 8000b56:	1a9b      	subs	r3, r3, r2
 8000b58:	42ab      	cmp	r3, r5
 8000b5a:	dc26      	bgt.n	8000baa <_printf_common+0x96>
 8000b5c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000b60:	6822      	ldr	r2, [r4, #0]
 8000b62:	3b00      	subs	r3, #0
 8000b64:	bf18      	it	ne
 8000b66:	2301      	movne	r3, #1
 8000b68:	0692      	lsls	r2, r2, #26
 8000b6a:	d42b      	bmi.n	8000bc4 <_printf_common+0xb0>
 8000b6c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000b70:	4641      	mov	r1, r8
 8000b72:	4638      	mov	r0, r7
 8000b74:	47c8      	blx	r9
 8000b76:	3001      	adds	r0, #1
 8000b78:	d01e      	beq.n	8000bb8 <_printf_common+0xa4>
 8000b7a:	6823      	ldr	r3, [r4, #0]
 8000b7c:	6922      	ldr	r2, [r4, #16]
 8000b7e:	f003 0306 	and.w	r3, r3, #6
 8000b82:	2b04      	cmp	r3, #4
 8000b84:	bf02      	ittt	eq
 8000b86:	68e5      	ldreq	r5, [r4, #12]
 8000b88:	6833      	ldreq	r3, [r6, #0]
 8000b8a:	1aed      	subeq	r5, r5, r3
 8000b8c:	68a3      	ldr	r3, [r4, #8]
 8000b8e:	bf0c      	ite	eq
 8000b90:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b94:	2500      	movne	r5, #0
 8000b96:	4293      	cmp	r3, r2
 8000b98:	bfc4      	itt	gt
 8000b9a:	1a9b      	subgt	r3, r3, r2
 8000b9c:	18ed      	addgt	r5, r5, r3
 8000b9e:	2600      	movs	r6, #0
 8000ba0:	341a      	adds	r4, #26
 8000ba2:	42b5      	cmp	r5, r6
 8000ba4:	d11a      	bne.n	8000bdc <_printf_common+0xc8>
 8000ba6:	2000      	movs	r0, #0
 8000ba8:	e008      	b.n	8000bbc <_printf_common+0xa8>
 8000baa:	2301      	movs	r3, #1
 8000bac:	4652      	mov	r2, sl
 8000bae:	4641      	mov	r1, r8
 8000bb0:	4638      	mov	r0, r7
 8000bb2:	47c8      	blx	r9
 8000bb4:	3001      	adds	r0, #1
 8000bb6:	d103      	bne.n	8000bc0 <_printf_common+0xac>
 8000bb8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000bbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bc0:	3501      	adds	r5, #1
 8000bc2:	e7c6      	b.n	8000b52 <_printf_common+0x3e>
 8000bc4:	18e1      	adds	r1, r4, r3
 8000bc6:	1c5a      	adds	r2, r3, #1
 8000bc8:	2030      	movs	r0, #48	@ 0x30
 8000bca:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000bce:	4422      	add	r2, r4
 8000bd0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000bd4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000bd8:	3302      	adds	r3, #2
 8000bda:	e7c7      	b.n	8000b6c <_printf_common+0x58>
 8000bdc:	2301      	movs	r3, #1
 8000bde:	4622      	mov	r2, r4
 8000be0:	4641      	mov	r1, r8
 8000be2:	4638      	mov	r0, r7
 8000be4:	47c8      	blx	r9
 8000be6:	3001      	adds	r0, #1
 8000be8:	d0e6      	beq.n	8000bb8 <_printf_common+0xa4>
 8000bea:	3601      	adds	r6, #1
 8000bec:	e7d9      	b.n	8000ba2 <_printf_common+0x8e>
	...

08000bf0 <_printf_i>:
 8000bf0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000bf4:	7e0f      	ldrb	r7, [r1, #24]
 8000bf6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000bf8:	2f78      	cmp	r7, #120	@ 0x78
 8000bfa:	4691      	mov	r9, r2
 8000bfc:	4680      	mov	r8, r0
 8000bfe:	460c      	mov	r4, r1
 8000c00:	469a      	mov	sl, r3
 8000c02:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000c06:	d807      	bhi.n	8000c18 <_printf_i+0x28>
 8000c08:	2f62      	cmp	r7, #98	@ 0x62
 8000c0a:	d80a      	bhi.n	8000c22 <_printf_i+0x32>
 8000c0c:	2f00      	cmp	r7, #0
 8000c0e:	f000 80d2 	beq.w	8000db6 <_printf_i+0x1c6>
 8000c12:	2f58      	cmp	r7, #88	@ 0x58
 8000c14:	f000 80b9 	beq.w	8000d8a <_printf_i+0x19a>
 8000c18:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000c1c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000c20:	e03a      	b.n	8000c98 <_printf_i+0xa8>
 8000c22:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000c26:	2b15      	cmp	r3, #21
 8000c28:	d8f6      	bhi.n	8000c18 <_printf_i+0x28>
 8000c2a:	a101      	add	r1, pc, #4	@ (adr r1, 8000c30 <_printf_i+0x40>)
 8000c2c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c30:	08000c89 	.word	0x08000c89
 8000c34:	08000c9d 	.word	0x08000c9d
 8000c38:	08000c19 	.word	0x08000c19
 8000c3c:	08000c19 	.word	0x08000c19
 8000c40:	08000c19 	.word	0x08000c19
 8000c44:	08000c19 	.word	0x08000c19
 8000c48:	08000c9d 	.word	0x08000c9d
 8000c4c:	08000c19 	.word	0x08000c19
 8000c50:	08000c19 	.word	0x08000c19
 8000c54:	08000c19 	.word	0x08000c19
 8000c58:	08000c19 	.word	0x08000c19
 8000c5c:	08000d9d 	.word	0x08000d9d
 8000c60:	08000cc7 	.word	0x08000cc7
 8000c64:	08000d57 	.word	0x08000d57
 8000c68:	08000c19 	.word	0x08000c19
 8000c6c:	08000c19 	.word	0x08000c19
 8000c70:	08000dbf 	.word	0x08000dbf
 8000c74:	08000c19 	.word	0x08000c19
 8000c78:	08000cc7 	.word	0x08000cc7
 8000c7c:	08000c19 	.word	0x08000c19
 8000c80:	08000c19 	.word	0x08000c19
 8000c84:	08000d5f 	.word	0x08000d5f
 8000c88:	6833      	ldr	r3, [r6, #0]
 8000c8a:	1d1a      	adds	r2, r3, #4
 8000c8c:	681b      	ldr	r3, [r3, #0]
 8000c8e:	6032      	str	r2, [r6, #0]
 8000c90:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000c94:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000c98:	2301      	movs	r3, #1
 8000c9a:	e09d      	b.n	8000dd8 <_printf_i+0x1e8>
 8000c9c:	6833      	ldr	r3, [r6, #0]
 8000c9e:	6820      	ldr	r0, [r4, #0]
 8000ca0:	1d19      	adds	r1, r3, #4
 8000ca2:	6031      	str	r1, [r6, #0]
 8000ca4:	0606      	lsls	r6, r0, #24
 8000ca6:	d501      	bpl.n	8000cac <_printf_i+0xbc>
 8000ca8:	681d      	ldr	r5, [r3, #0]
 8000caa:	e003      	b.n	8000cb4 <_printf_i+0xc4>
 8000cac:	0645      	lsls	r5, r0, #25
 8000cae:	d5fb      	bpl.n	8000ca8 <_printf_i+0xb8>
 8000cb0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000cb4:	2d00      	cmp	r5, #0
 8000cb6:	da03      	bge.n	8000cc0 <_printf_i+0xd0>
 8000cb8:	232d      	movs	r3, #45	@ 0x2d
 8000cba:	426d      	negs	r5, r5
 8000cbc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000cc0:	4859      	ldr	r0, [pc, #356]	@ (8000e28 <_printf_i+0x238>)
 8000cc2:	230a      	movs	r3, #10
 8000cc4:	e011      	b.n	8000cea <_printf_i+0xfa>
 8000cc6:	6821      	ldr	r1, [r4, #0]
 8000cc8:	6833      	ldr	r3, [r6, #0]
 8000cca:	0608      	lsls	r0, r1, #24
 8000ccc:	f853 5b04 	ldr.w	r5, [r3], #4
 8000cd0:	d402      	bmi.n	8000cd8 <_printf_i+0xe8>
 8000cd2:	0649      	lsls	r1, r1, #25
 8000cd4:	bf48      	it	mi
 8000cd6:	b2ad      	uxthmi	r5, r5
 8000cd8:	2f6f      	cmp	r7, #111	@ 0x6f
 8000cda:	4853      	ldr	r0, [pc, #332]	@ (8000e28 <_printf_i+0x238>)
 8000cdc:	6033      	str	r3, [r6, #0]
 8000cde:	bf14      	ite	ne
 8000ce0:	230a      	movne	r3, #10
 8000ce2:	2308      	moveq	r3, #8
 8000ce4:	2100      	movs	r1, #0
 8000ce6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000cea:	6866      	ldr	r6, [r4, #4]
 8000cec:	60a6      	str	r6, [r4, #8]
 8000cee:	2e00      	cmp	r6, #0
 8000cf0:	bfa2      	ittt	ge
 8000cf2:	6821      	ldrge	r1, [r4, #0]
 8000cf4:	f021 0104 	bicge.w	r1, r1, #4
 8000cf8:	6021      	strge	r1, [r4, #0]
 8000cfa:	b90d      	cbnz	r5, 8000d00 <_printf_i+0x110>
 8000cfc:	2e00      	cmp	r6, #0
 8000cfe:	d04b      	beq.n	8000d98 <_printf_i+0x1a8>
 8000d00:	4616      	mov	r6, r2
 8000d02:	fbb5 f1f3 	udiv	r1, r5, r3
 8000d06:	fb03 5711 	mls	r7, r3, r1, r5
 8000d0a:	5dc7      	ldrb	r7, [r0, r7]
 8000d0c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000d10:	462f      	mov	r7, r5
 8000d12:	42bb      	cmp	r3, r7
 8000d14:	460d      	mov	r5, r1
 8000d16:	d9f4      	bls.n	8000d02 <_printf_i+0x112>
 8000d18:	2b08      	cmp	r3, #8
 8000d1a:	d10b      	bne.n	8000d34 <_printf_i+0x144>
 8000d1c:	6823      	ldr	r3, [r4, #0]
 8000d1e:	07df      	lsls	r7, r3, #31
 8000d20:	d508      	bpl.n	8000d34 <_printf_i+0x144>
 8000d22:	6923      	ldr	r3, [r4, #16]
 8000d24:	6861      	ldr	r1, [r4, #4]
 8000d26:	4299      	cmp	r1, r3
 8000d28:	bfde      	ittt	le
 8000d2a:	2330      	movle	r3, #48	@ 0x30
 8000d2c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000d30:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8000d34:	1b92      	subs	r2, r2, r6
 8000d36:	6122      	str	r2, [r4, #16]
 8000d38:	f8cd a000 	str.w	sl, [sp]
 8000d3c:	464b      	mov	r3, r9
 8000d3e:	aa03      	add	r2, sp, #12
 8000d40:	4621      	mov	r1, r4
 8000d42:	4640      	mov	r0, r8
 8000d44:	f7ff fee6 	bl	8000b14 <_printf_common>
 8000d48:	3001      	adds	r0, #1
 8000d4a:	d14a      	bne.n	8000de2 <_printf_i+0x1f2>
 8000d4c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000d50:	b004      	add	sp, #16
 8000d52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d56:	6823      	ldr	r3, [r4, #0]
 8000d58:	f043 0320 	orr.w	r3, r3, #32
 8000d5c:	6023      	str	r3, [r4, #0]
 8000d5e:	4833      	ldr	r0, [pc, #204]	@ (8000e2c <_printf_i+0x23c>)
 8000d60:	2778      	movs	r7, #120	@ 0x78
 8000d62:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000d66:	6823      	ldr	r3, [r4, #0]
 8000d68:	6831      	ldr	r1, [r6, #0]
 8000d6a:	061f      	lsls	r7, r3, #24
 8000d6c:	f851 5b04 	ldr.w	r5, [r1], #4
 8000d70:	d402      	bmi.n	8000d78 <_printf_i+0x188>
 8000d72:	065f      	lsls	r7, r3, #25
 8000d74:	bf48      	it	mi
 8000d76:	b2ad      	uxthmi	r5, r5
 8000d78:	6031      	str	r1, [r6, #0]
 8000d7a:	07d9      	lsls	r1, r3, #31
 8000d7c:	bf44      	itt	mi
 8000d7e:	f043 0320 	orrmi.w	r3, r3, #32
 8000d82:	6023      	strmi	r3, [r4, #0]
 8000d84:	b11d      	cbz	r5, 8000d8e <_printf_i+0x19e>
 8000d86:	2310      	movs	r3, #16
 8000d88:	e7ac      	b.n	8000ce4 <_printf_i+0xf4>
 8000d8a:	4827      	ldr	r0, [pc, #156]	@ (8000e28 <_printf_i+0x238>)
 8000d8c:	e7e9      	b.n	8000d62 <_printf_i+0x172>
 8000d8e:	6823      	ldr	r3, [r4, #0]
 8000d90:	f023 0320 	bic.w	r3, r3, #32
 8000d94:	6023      	str	r3, [r4, #0]
 8000d96:	e7f6      	b.n	8000d86 <_printf_i+0x196>
 8000d98:	4616      	mov	r6, r2
 8000d9a:	e7bd      	b.n	8000d18 <_printf_i+0x128>
 8000d9c:	6833      	ldr	r3, [r6, #0]
 8000d9e:	6825      	ldr	r5, [r4, #0]
 8000da0:	6961      	ldr	r1, [r4, #20]
 8000da2:	1d18      	adds	r0, r3, #4
 8000da4:	6030      	str	r0, [r6, #0]
 8000da6:	062e      	lsls	r6, r5, #24
 8000da8:	681b      	ldr	r3, [r3, #0]
 8000daa:	d501      	bpl.n	8000db0 <_printf_i+0x1c0>
 8000dac:	6019      	str	r1, [r3, #0]
 8000dae:	e002      	b.n	8000db6 <_printf_i+0x1c6>
 8000db0:	0668      	lsls	r0, r5, #25
 8000db2:	d5fb      	bpl.n	8000dac <_printf_i+0x1bc>
 8000db4:	8019      	strh	r1, [r3, #0]
 8000db6:	2300      	movs	r3, #0
 8000db8:	6123      	str	r3, [r4, #16]
 8000dba:	4616      	mov	r6, r2
 8000dbc:	e7bc      	b.n	8000d38 <_printf_i+0x148>
 8000dbe:	6833      	ldr	r3, [r6, #0]
 8000dc0:	1d1a      	adds	r2, r3, #4
 8000dc2:	6032      	str	r2, [r6, #0]
 8000dc4:	681e      	ldr	r6, [r3, #0]
 8000dc6:	6862      	ldr	r2, [r4, #4]
 8000dc8:	2100      	movs	r1, #0
 8000dca:	4630      	mov	r0, r6
 8000dcc:	f7ff fa08 	bl	80001e0 <memchr>
 8000dd0:	b108      	cbz	r0, 8000dd6 <_printf_i+0x1e6>
 8000dd2:	1b80      	subs	r0, r0, r6
 8000dd4:	6060      	str	r0, [r4, #4]
 8000dd6:	6863      	ldr	r3, [r4, #4]
 8000dd8:	6123      	str	r3, [r4, #16]
 8000dda:	2300      	movs	r3, #0
 8000ddc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000de0:	e7aa      	b.n	8000d38 <_printf_i+0x148>
 8000de2:	6923      	ldr	r3, [r4, #16]
 8000de4:	4632      	mov	r2, r6
 8000de6:	4649      	mov	r1, r9
 8000de8:	4640      	mov	r0, r8
 8000dea:	47d0      	blx	sl
 8000dec:	3001      	adds	r0, #1
 8000dee:	d0ad      	beq.n	8000d4c <_printf_i+0x15c>
 8000df0:	6823      	ldr	r3, [r4, #0]
 8000df2:	079b      	lsls	r3, r3, #30
 8000df4:	d413      	bmi.n	8000e1e <_printf_i+0x22e>
 8000df6:	68e0      	ldr	r0, [r4, #12]
 8000df8:	9b03      	ldr	r3, [sp, #12]
 8000dfa:	4298      	cmp	r0, r3
 8000dfc:	bfb8      	it	lt
 8000dfe:	4618      	movlt	r0, r3
 8000e00:	e7a6      	b.n	8000d50 <_printf_i+0x160>
 8000e02:	2301      	movs	r3, #1
 8000e04:	4632      	mov	r2, r6
 8000e06:	4649      	mov	r1, r9
 8000e08:	4640      	mov	r0, r8
 8000e0a:	47d0      	blx	sl
 8000e0c:	3001      	adds	r0, #1
 8000e0e:	d09d      	beq.n	8000d4c <_printf_i+0x15c>
 8000e10:	3501      	adds	r5, #1
 8000e12:	68e3      	ldr	r3, [r4, #12]
 8000e14:	9903      	ldr	r1, [sp, #12]
 8000e16:	1a5b      	subs	r3, r3, r1
 8000e18:	42ab      	cmp	r3, r5
 8000e1a:	dcf2      	bgt.n	8000e02 <_printf_i+0x212>
 8000e1c:	e7eb      	b.n	8000df6 <_printf_i+0x206>
 8000e1e:	2500      	movs	r5, #0
 8000e20:	f104 0619 	add.w	r6, r4, #25
 8000e24:	e7f5      	b.n	8000e12 <_printf_i+0x222>
 8000e26:	bf00      	nop
 8000e28:	080013d2 	.word	0x080013d2
 8000e2c:	080013e3 	.word	0x080013e3

08000e30 <__sflush_r>:
 8000e30:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000e34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e36:	0716      	lsls	r6, r2, #28
 8000e38:	4605      	mov	r5, r0
 8000e3a:	460c      	mov	r4, r1
 8000e3c:	d454      	bmi.n	8000ee8 <__sflush_r+0xb8>
 8000e3e:	684b      	ldr	r3, [r1, #4]
 8000e40:	2b00      	cmp	r3, #0
 8000e42:	dc02      	bgt.n	8000e4a <__sflush_r+0x1a>
 8000e44:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000e46:	2b00      	cmp	r3, #0
 8000e48:	dd48      	ble.n	8000edc <__sflush_r+0xac>
 8000e4a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000e4c:	2e00      	cmp	r6, #0
 8000e4e:	d045      	beq.n	8000edc <__sflush_r+0xac>
 8000e50:	2300      	movs	r3, #0
 8000e52:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000e56:	682f      	ldr	r7, [r5, #0]
 8000e58:	6a21      	ldr	r1, [r4, #32]
 8000e5a:	602b      	str	r3, [r5, #0]
 8000e5c:	d030      	beq.n	8000ec0 <__sflush_r+0x90>
 8000e5e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000e60:	89a3      	ldrh	r3, [r4, #12]
 8000e62:	0759      	lsls	r1, r3, #29
 8000e64:	d505      	bpl.n	8000e72 <__sflush_r+0x42>
 8000e66:	6863      	ldr	r3, [r4, #4]
 8000e68:	1ad2      	subs	r2, r2, r3
 8000e6a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000e6c:	b10b      	cbz	r3, 8000e72 <__sflush_r+0x42>
 8000e6e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000e70:	1ad2      	subs	r2, r2, r3
 8000e72:	2300      	movs	r3, #0
 8000e74:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000e76:	6a21      	ldr	r1, [r4, #32]
 8000e78:	4628      	mov	r0, r5
 8000e7a:	47b0      	blx	r6
 8000e7c:	1c43      	adds	r3, r0, #1
 8000e7e:	89a3      	ldrh	r3, [r4, #12]
 8000e80:	d106      	bne.n	8000e90 <__sflush_r+0x60>
 8000e82:	6829      	ldr	r1, [r5, #0]
 8000e84:	291d      	cmp	r1, #29
 8000e86:	d82b      	bhi.n	8000ee0 <__sflush_r+0xb0>
 8000e88:	4a28      	ldr	r2, [pc, #160]	@ (8000f2c <__sflush_r+0xfc>)
 8000e8a:	410a      	asrs	r2, r1
 8000e8c:	07d6      	lsls	r6, r2, #31
 8000e8e:	d427      	bmi.n	8000ee0 <__sflush_r+0xb0>
 8000e90:	2200      	movs	r2, #0
 8000e92:	6062      	str	r2, [r4, #4]
 8000e94:	04d9      	lsls	r1, r3, #19
 8000e96:	6922      	ldr	r2, [r4, #16]
 8000e98:	6022      	str	r2, [r4, #0]
 8000e9a:	d504      	bpl.n	8000ea6 <__sflush_r+0x76>
 8000e9c:	1c42      	adds	r2, r0, #1
 8000e9e:	d101      	bne.n	8000ea4 <__sflush_r+0x74>
 8000ea0:	682b      	ldr	r3, [r5, #0]
 8000ea2:	b903      	cbnz	r3, 8000ea6 <__sflush_r+0x76>
 8000ea4:	6560      	str	r0, [r4, #84]	@ 0x54
 8000ea6:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000ea8:	602f      	str	r7, [r5, #0]
 8000eaa:	b1b9      	cbz	r1, 8000edc <__sflush_r+0xac>
 8000eac:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000eb0:	4299      	cmp	r1, r3
 8000eb2:	d002      	beq.n	8000eba <__sflush_r+0x8a>
 8000eb4:	4628      	mov	r0, r5
 8000eb6:	f000 fa21 	bl	80012fc <_free_r>
 8000eba:	2300      	movs	r3, #0
 8000ebc:	6363      	str	r3, [r4, #52]	@ 0x34
 8000ebe:	e00d      	b.n	8000edc <__sflush_r+0xac>
 8000ec0:	2301      	movs	r3, #1
 8000ec2:	4628      	mov	r0, r5
 8000ec4:	47b0      	blx	r6
 8000ec6:	4602      	mov	r2, r0
 8000ec8:	1c50      	adds	r0, r2, #1
 8000eca:	d1c9      	bne.n	8000e60 <__sflush_r+0x30>
 8000ecc:	682b      	ldr	r3, [r5, #0]
 8000ece:	2b00      	cmp	r3, #0
 8000ed0:	d0c6      	beq.n	8000e60 <__sflush_r+0x30>
 8000ed2:	2b1d      	cmp	r3, #29
 8000ed4:	d001      	beq.n	8000eda <__sflush_r+0xaa>
 8000ed6:	2b16      	cmp	r3, #22
 8000ed8:	d11d      	bne.n	8000f16 <__sflush_r+0xe6>
 8000eda:	602f      	str	r7, [r5, #0]
 8000edc:	2000      	movs	r0, #0
 8000ede:	e021      	b.n	8000f24 <__sflush_r+0xf4>
 8000ee0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000ee4:	b21b      	sxth	r3, r3
 8000ee6:	e01a      	b.n	8000f1e <__sflush_r+0xee>
 8000ee8:	690f      	ldr	r7, [r1, #16]
 8000eea:	2f00      	cmp	r7, #0
 8000eec:	d0f6      	beq.n	8000edc <__sflush_r+0xac>
 8000eee:	0793      	lsls	r3, r2, #30
 8000ef0:	680e      	ldr	r6, [r1, #0]
 8000ef2:	bf08      	it	eq
 8000ef4:	694b      	ldreq	r3, [r1, #20]
 8000ef6:	600f      	str	r7, [r1, #0]
 8000ef8:	bf18      	it	ne
 8000efa:	2300      	movne	r3, #0
 8000efc:	1bf6      	subs	r6, r6, r7
 8000efe:	608b      	str	r3, [r1, #8]
 8000f00:	2e00      	cmp	r6, #0
 8000f02:	ddeb      	ble.n	8000edc <__sflush_r+0xac>
 8000f04:	6a21      	ldr	r1, [r4, #32]
 8000f06:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8000f0a:	4633      	mov	r3, r6
 8000f0c:	463a      	mov	r2, r7
 8000f0e:	4628      	mov	r0, r5
 8000f10:	47e0      	blx	ip
 8000f12:	2800      	cmp	r0, #0
 8000f14:	dc07      	bgt.n	8000f26 <__sflush_r+0xf6>
 8000f16:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f1a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f1e:	81a3      	strh	r3, [r4, #12]
 8000f20:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000f24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f26:	4407      	add	r7, r0
 8000f28:	1a36      	subs	r6, r6, r0
 8000f2a:	e7e9      	b.n	8000f00 <__sflush_r+0xd0>
 8000f2c:	dfbffffe 	.word	0xdfbffffe

08000f30 <_fflush_r>:
 8000f30:	b538      	push	{r3, r4, r5, lr}
 8000f32:	690b      	ldr	r3, [r1, #16]
 8000f34:	4605      	mov	r5, r0
 8000f36:	460c      	mov	r4, r1
 8000f38:	b913      	cbnz	r3, 8000f40 <_fflush_r+0x10>
 8000f3a:	2500      	movs	r5, #0
 8000f3c:	4628      	mov	r0, r5
 8000f3e:	bd38      	pop	{r3, r4, r5, pc}
 8000f40:	b118      	cbz	r0, 8000f4a <_fflush_r+0x1a>
 8000f42:	6a03      	ldr	r3, [r0, #32]
 8000f44:	b90b      	cbnz	r3, 8000f4a <_fflush_r+0x1a>
 8000f46:	f7ff fb87 	bl	8000658 <__sinit>
 8000f4a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f4e:	2b00      	cmp	r3, #0
 8000f50:	d0f3      	beq.n	8000f3a <_fflush_r+0xa>
 8000f52:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000f54:	07d0      	lsls	r0, r2, #31
 8000f56:	d404      	bmi.n	8000f62 <_fflush_r+0x32>
 8000f58:	0599      	lsls	r1, r3, #22
 8000f5a:	d402      	bmi.n	8000f62 <_fflush_r+0x32>
 8000f5c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000f5e:	f7ff fbf6 	bl	800074e <__retarget_lock_acquire_recursive>
 8000f62:	4628      	mov	r0, r5
 8000f64:	4621      	mov	r1, r4
 8000f66:	f7ff ff63 	bl	8000e30 <__sflush_r>
 8000f6a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000f6c:	07da      	lsls	r2, r3, #31
 8000f6e:	4605      	mov	r5, r0
 8000f70:	d4e4      	bmi.n	8000f3c <_fflush_r+0xc>
 8000f72:	89a3      	ldrh	r3, [r4, #12]
 8000f74:	059b      	lsls	r3, r3, #22
 8000f76:	d4e1      	bmi.n	8000f3c <_fflush_r+0xc>
 8000f78:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000f7a:	f7ff fbe9 	bl	8000750 <__retarget_lock_release_recursive>
 8000f7e:	e7dd      	b.n	8000f3c <_fflush_r+0xc>

08000f80 <__malloc_lock>:
 8000f80:	4801      	ldr	r0, [pc, #4]	@ (8000f88 <__malloc_lock+0x8>)
 8000f82:	f7ff bbe4 	b.w	800074e <__retarget_lock_acquire_recursive>
 8000f86:	bf00      	nop
 8000f88:	200001dc 	.word	0x200001dc

08000f8c <__malloc_unlock>:
 8000f8c:	4801      	ldr	r0, [pc, #4]	@ (8000f94 <__malloc_unlock+0x8>)
 8000f8e:	f7ff bbdf 	b.w	8000750 <__retarget_lock_release_recursive>
 8000f92:	bf00      	nop
 8000f94:	200001dc 	.word	0x200001dc

08000f98 <__sread>:
 8000f98:	b510      	push	{r4, lr}
 8000f9a:	460c      	mov	r4, r1
 8000f9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fa0:	f000 f978 	bl	8001294 <_read_r>
 8000fa4:	2800      	cmp	r0, #0
 8000fa6:	bfab      	itete	ge
 8000fa8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000faa:	89a3      	ldrhlt	r3, [r4, #12]
 8000fac:	181b      	addge	r3, r3, r0
 8000fae:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000fb2:	bfac      	ite	ge
 8000fb4:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000fb6:	81a3      	strhlt	r3, [r4, #12]
 8000fb8:	bd10      	pop	{r4, pc}

08000fba <__swrite>:
 8000fba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fbe:	461f      	mov	r7, r3
 8000fc0:	898b      	ldrh	r3, [r1, #12]
 8000fc2:	05db      	lsls	r3, r3, #23
 8000fc4:	4605      	mov	r5, r0
 8000fc6:	460c      	mov	r4, r1
 8000fc8:	4616      	mov	r6, r2
 8000fca:	d505      	bpl.n	8000fd8 <__swrite+0x1e>
 8000fcc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fd0:	2302      	movs	r3, #2
 8000fd2:	2200      	movs	r2, #0
 8000fd4:	f000 f94c 	bl	8001270 <_lseek_r>
 8000fd8:	89a3      	ldrh	r3, [r4, #12]
 8000fda:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000fde:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000fe2:	81a3      	strh	r3, [r4, #12]
 8000fe4:	4632      	mov	r2, r6
 8000fe6:	463b      	mov	r3, r7
 8000fe8:	4628      	mov	r0, r5
 8000fea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000fee:	f000 b973 	b.w	80012d8 <_write_r>

08000ff2 <__sseek>:
 8000ff2:	b510      	push	{r4, lr}
 8000ff4:	460c      	mov	r4, r1
 8000ff6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ffa:	f000 f939 	bl	8001270 <_lseek_r>
 8000ffe:	1c43      	adds	r3, r0, #1
 8001000:	89a3      	ldrh	r3, [r4, #12]
 8001002:	bf15      	itete	ne
 8001004:	6560      	strne	r0, [r4, #84]	@ 0x54
 8001006:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800100a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800100e:	81a3      	strheq	r3, [r4, #12]
 8001010:	bf18      	it	ne
 8001012:	81a3      	strhne	r3, [r4, #12]
 8001014:	bd10      	pop	{r4, pc}

08001016 <__sclose>:
 8001016:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800101a:	f000 b8f7 	b.w	800120c <_close_r>

0800101e <__swbuf_r>:
 800101e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001020:	460e      	mov	r6, r1
 8001022:	4614      	mov	r4, r2
 8001024:	4605      	mov	r5, r0
 8001026:	b118      	cbz	r0, 8001030 <__swbuf_r+0x12>
 8001028:	6a03      	ldr	r3, [r0, #32]
 800102a:	b90b      	cbnz	r3, 8001030 <__swbuf_r+0x12>
 800102c:	f7ff fb14 	bl	8000658 <__sinit>
 8001030:	69a3      	ldr	r3, [r4, #24]
 8001032:	60a3      	str	r3, [r4, #8]
 8001034:	89a3      	ldrh	r3, [r4, #12]
 8001036:	071a      	lsls	r2, r3, #28
 8001038:	d501      	bpl.n	800103e <__swbuf_r+0x20>
 800103a:	6923      	ldr	r3, [r4, #16]
 800103c:	b943      	cbnz	r3, 8001050 <__swbuf_r+0x32>
 800103e:	4621      	mov	r1, r4
 8001040:	4628      	mov	r0, r5
 8001042:	f000 f82b 	bl	800109c <__swsetup_r>
 8001046:	b118      	cbz	r0, 8001050 <__swbuf_r+0x32>
 8001048:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 800104c:	4638      	mov	r0, r7
 800104e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001050:	6823      	ldr	r3, [r4, #0]
 8001052:	6922      	ldr	r2, [r4, #16]
 8001054:	1a98      	subs	r0, r3, r2
 8001056:	6963      	ldr	r3, [r4, #20]
 8001058:	b2f6      	uxtb	r6, r6
 800105a:	4283      	cmp	r3, r0
 800105c:	4637      	mov	r7, r6
 800105e:	dc05      	bgt.n	800106c <__swbuf_r+0x4e>
 8001060:	4621      	mov	r1, r4
 8001062:	4628      	mov	r0, r5
 8001064:	f7ff ff64 	bl	8000f30 <_fflush_r>
 8001068:	2800      	cmp	r0, #0
 800106a:	d1ed      	bne.n	8001048 <__swbuf_r+0x2a>
 800106c:	68a3      	ldr	r3, [r4, #8]
 800106e:	3b01      	subs	r3, #1
 8001070:	60a3      	str	r3, [r4, #8]
 8001072:	6823      	ldr	r3, [r4, #0]
 8001074:	1c5a      	adds	r2, r3, #1
 8001076:	6022      	str	r2, [r4, #0]
 8001078:	701e      	strb	r6, [r3, #0]
 800107a:	6962      	ldr	r2, [r4, #20]
 800107c:	1c43      	adds	r3, r0, #1
 800107e:	429a      	cmp	r2, r3
 8001080:	d004      	beq.n	800108c <__swbuf_r+0x6e>
 8001082:	89a3      	ldrh	r3, [r4, #12]
 8001084:	07db      	lsls	r3, r3, #31
 8001086:	d5e1      	bpl.n	800104c <__swbuf_r+0x2e>
 8001088:	2e0a      	cmp	r6, #10
 800108a:	d1df      	bne.n	800104c <__swbuf_r+0x2e>
 800108c:	4621      	mov	r1, r4
 800108e:	4628      	mov	r0, r5
 8001090:	f7ff ff4e 	bl	8000f30 <_fflush_r>
 8001094:	2800      	cmp	r0, #0
 8001096:	d0d9      	beq.n	800104c <__swbuf_r+0x2e>
 8001098:	e7d6      	b.n	8001048 <__swbuf_r+0x2a>
	...

0800109c <__swsetup_r>:
 800109c:	b538      	push	{r3, r4, r5, lr}
 800109e:	4b29      	ldr	r3, [pc, #164]	@ (8001144 <__swsetup_r+0xa8>)
 80010a0:	4605      	mov	r5, r0
 80010a2:	6818      	ldr	r0, [r3, #0]
 80010a4:	460c      	mov	r4, r1
 80010a6:	b118      	cbz	r0, 80010b0 <__swsetup_r+0x14>
 80010a8:	6a03      	ldr	r3, [r0, #32]
 80010aa:	b90b      	cbnz	r3, 80010b0 <__swsetup_r+0x14>
 80010ac:	f7ff fad4 	bl	8000658 <__sinit>
 80010b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010b4:	0719      	lsls	r1, r3, #28
 80010b6:	d422      	bmi.n	80010fe <__swsetup_r+0x62>
 80010b8:	06da      	lsls	r2, r3, #27
 80010ba:	d407      	bmi.n	80010cc <__swsetup_r+0x30>
 80010bc:	2209      	movs	r2, #9
 80010be:	602a      	str	r2, [r5, #0]
 80010c0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80010c4:	81a3      	strh	r3, [r4, #12]
 80010c6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80010ca:	e033      	b.n	8001134 <__swsetup_r+0x98>
 80010cc:	0758      	lsls	r0, r3, #29
 80010ce:	d512      	bpl.n	80010f6 <__swsetup_r+0x5a>
 80010d0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80010d2:	b141      	cbz	r1, 80010e6 <__swsetup_r+0x4a>
 80010d4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80010d8:	4299      	cmp	r1, r3
 80010da:	d002      	beq.n	80010e2 <__swsetup_r+0x46>
 80010dc:	4628      	mov	r0, r5
 80010de:	f000 f90d 	bl	80012fc <_free_r>
 80010e2:	2300      	movs	r3, #0
 80010e4:	6363      	str	r3, [r4, #52]	@ 0x34
 80010e6:	89a3      	ldrh	r3, [r4, #12]
 80010e8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80010ec:	81a3      	strh	r3, [r4, #12]
 80010ee:	2300      	movs	r3, #0
 80010f0:	6063      	str	r3, [r4, #4]
 80010f2:	6923      	ldr	r3, [r4, #16]
 80010f4:	6023      	str	r3, [r4, #0]
 80010f6:	89a3      	ldrh	r3, [r4, #12]
 80010f8:	f043 0308 	orr.w	r3, r3, #8
 80010fc:	81a3      	strh	r3, [r4, #12]
 80010fe:	6923      	ldr	r3, [r4, #16]
 8001100:	b94b      	cbnz	r3, 8001116 <__swsetup_r+0x7a>
 8001102:	89a3      	ldrh	r3, [r4, #12]
 8001104:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001108:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800110c:	d003      	beq.n	8001116 <__swsetup_r+0x7a>
 800110e:	4621      	mov	r1, r4
 8001110:	4628      	mov	r0, r5
 8001112:	f000 f83f 	bl	8001194 <__smakebuf_r>
 8001116:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800111a:	f013 0201 	ands.w	r2, r3, #1
 800111e:	d00a      	beq.n	8001136 <__swsetup_r+0x9a>
 8001120:	2200      	movs	r2, #0
 8001122:	60a2      	str	r2, [r4, #8]
 8001124:	6962      	ldr	r2, [r4, #20]
 8001126:	4252      	negs	r2, r2
 8001128:	61a2      	str	r2, [r4, #24]
 800112a:	6922      	ldr	r2, [r4, #16]
 800112c:	b942      	cbnz	r2, 8001140 <__swsetup_r+0xa4>
 800112e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001132:	d1c5      	bne.n	80010c0 <__swsetup_r+0x24>
 8001134:	bd38      	pop	{r3, r4, r5, pc}
 8001136:	0799      	lsls	r1, r3, #30
 8001138:	bf58      	it	pl
 800113a:	6962      	ldrpl	r2, [r4, #20]
 800113c:	60a2      	str	r2, [r4, #8]
 800113e:	e7f4      	b.n	800112a <__swsetup_r+0x8e>
 8001140:	2000      	movs	r0, #0
 8001142:	e7f7      	b.n	8001134 <__swsetup_r+0x98>
 8001144:	20000028 	.word	0x20000028

08001148 <__swhatbuf_r>:
 8001148:	b570      	push	{r4, r5, r6, lr}
 800114a:	460c      	mov	r4, r1
 800114c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001150:	2900      	cmp	r1, #0
 8001152:	b096      	sub	sp, #88	@ 0x58
 8001154:	4615      	mov	r5, r2
 8001156:	461e      	mov	r6, r3
 8001158:	da0d      	bge.n	8001176 <__swhatbuf_r+0x2e>
 800115a:	89a3      	ldrh	r3, [r4, #12]
 800115c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001160:	f04f 0100 	mov.w	r1, #0
 8001164:	bf14      	ite	ne
 8001166:	2340      	movne	r3, #64	@ 0x40
 8001168:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800116c:	2000      	movs	r0, #0
 800116e:	6031      	str	r1, [r6, #0]
 8001170:	602b      	str	r3, [r5, #0]
 8001172:	b016      	add	sp, #88	@ 0x58
 8001174:	bd70      	pop	{r4, r5, r6, pc}
 8001176:	466a      	mov	r2, sp
 8001178:	f000 f858 	bl	800122c <_fstat_r>
 800117c:	2800      	cmp	r0, #0
 800117e:	dbec      	blt.n	800115a <__swhatbuf_r+0x12>
 8001180:	9901      	ldr	r1, [sp, #4]
 8001182:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001186:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800118a:	4259      	negs	r1, r3
 800118c:	4159      	adcs	r1, r3
 800118e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001192:	e7eb      	b.n	800116c <__swhatbuf_r+0x24>

08001194 <__smakebuf_r>:
 8001194:	898b      	ldrh	r3, [r1, #12]
 8001196:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001198:	079d      	lsls	r5, r3, #30
 800119a:	4606      	mov	r6, r0
 800119c:	460c      	mov	r4, r1
 800119e:	d507      	bpl.n	80011b0 <__smakebuf_r+0x1c>
 80011a0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80011a4:	6023      	str	r3, [r4, #0]
 80011a6:	6123      	str	r3, [r4, #16]
 80011a8:	2301      	movs	r3, #1
 80011aa:	6163      	str	r3, [r4, #20]
 80011ac:	b003      	add	sp, #12
 80011ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011b0:	ab01      	add	r3, sp, #4
 80011b2:	466a      	mov	r2, sp
 80011b4:	f7ff ffc8 	bl	8001148 <__swhatbuf_r>
 80011b8:	9f00      	ldr	r7, [sp, #0]
 80011ba:	4605      	mov	r5, r0
 80011bc:	4639      	mov	r1, r7
 80011be:	4630      	mov	r0, r6
 80011c0:	f7ff fc28 	bl	8000a14 <_malloc_r>
 80011c4:	b948      	cbnz	r0, 80011da <__smakebuf_r+0x46>
 80011c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011ca:	059a      	lsls	r2, r3, #22
 80011cc:	d4ee      	bmi.n	80011ac <__smakebuf_r+0x18>
 80011ce:	f023 0303 	bic.w	r3, r3, #3
 80011d2:	f043 0302 	orr.w	r3, r3, #2
 80011d6:	81a3      	strh	r3, [r4, #12]
 80011d8:	e7e2      	b.n	80011a0 <__smakebuf_r+0xc>
 80011da:	89a3      	ldrh	r3, [r4, #12]
 80011dc:	6020      	str	r0, [r4, #0]
 80011de:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80011e2:	81a3      	strh	r3, [r4, #12]
 80011e4:	9b01      	ldr	r3, [sp, #4]
 80011e6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80011ea:	b15b      	cbz	r3, 8001204 <__smakebuf_r+0x70>
 80011ec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80011f0:	4630      	mov	r0, r6
 80011f2:	f000 f82d 	bl	8001250 <_isatty_r>
 80011f6:	b128      	cbz	r0, 8001204 <__smakebuf_r+0x70>
 80011f8:	89a3      	ldrh	r3, [r4, #12]
 80011fa:	f023 0303 	bic.w	r3, r3, #3
 80011fe:	f043 0301 	orr.w	r3, r3, #1
 8001202:	81a3      	strh	r3, [r4, #12]
 8001204:	89a3      	ldrh	r3, [r4, #12]
 8001206:	431d      	orrs	r5, r3
 8001208:	81a5      	strh	r5, [r4, #12]
 800120a:	e7cf      	b.n	80011ac <__smakebuf_r+0x18>

0800120c <_close_r>:
 800120c:	b538      	push	{r3, r4, r5, lr}
 800120e:	4d06      	ldr	r5, [pc, #24]	@ (8001228 <_close_r+0x1c>)
 8001210:	2300      	movs	r3, #0
 8001212:	4604      	mov	r4, r0
 8001214:	4608      	mov	r0, r1
 8001216:	602b      	str	r3, [r5, #0]
 8001218:	f7ff f901 	bl	800041e <_close>
 800121c:	1c43      	adds	r3, r0, #1
 800121e:	d102      	bne.n	8001226 <_close_r+0x1a>
 8001220:	682b      	ldr	r3, [r5, #0]
 8001222:	b103      	cbz	r3, 8001226 <_close_r+0x1a>
 8001224:	6023      	str	r3, [r4, #0]
 8001226:	bd38      	pop	{r3, r4, r5, pc}
 8001228:	200001e8 	.word	0x200001e8

0800122c <_fstat_r>:
 800122c:	b538      	push	{r3, r4, r5, lr}
 800122e:	4d07      	ldr	r5, [pc, #28]	@ (800124c <_fstat_r+0x20>)
 8001230:	2300      	movs	r3, #0
 8001232:	4604      	mov	r4, r0
 8001234:	4608      	mov	r0, r1
 8001236:	4611      	mov	r1, r2
 8001238:	602b      	str	r3, [r5, #0]
 800123a:	f7ff f8fb 	bl	8000434 <_fstat>
 800123e:	1c43      	adds	r3, r0, #1
 8001240:	d102      	bne.n	8001248 <_fstat_r+0x1c>
 8001242:	682b      	ldr	r3, [r5, #0]
 8001244:	b103      	cbz	r3, 8001248 <_fstat_r+0x1c>
 8001246:	6023      	str	r3, [r4, #0]
 8001248:	bd38      	pop	{r3, r4, r5, pc}
 800124a:	bf00      	nop
 800124c:	200001e8 	.word	0x200001e8

08001250 <_isatty_r>:
 8001250:	b538      	push	{r3, r4, r5, lr}
 8001252:	4d06      	ldr	r5, [pc, #24]	@ (800126c <_isatty_r+0x1c>)
 8001254:	2300      	movs	r3, #0
 8001256:	4604      	mov	r4, r0
 8001258:	4608      	mov	r0, r1
 800125a:	602b      	str	r3, [r5, #0]
 800125c:	f7ff f8f9 	bl	8000452 <_isatty>
 8001260:	1c43      	adds	r3, r0, #1
 8001262:	d102      	bne.n	800126a <_isatty_r+0x1a>
 8001264:	682b      	ldr	r3, [r5, #0]
 8001266:	b103      	cbz	r3, 800126a <_isatty_r+0x1a>
 8001268:	6023      	str	r3, [r4, #0]
 800126a:	bd38      	pop	{r3, r4, r5, pc}
 800126c:	200001e8 	.word	0x200001e8

08001270 <_lseek_r>:
 8001270:	b538      	push	{r3, r4, r5, lr}
 8001272:	4d07      	ldr	r5, [pc, #28]	@ (8001290 <_lseek_r+0x20>)
 8001274:	4604      	mov	r4, r0
 8001276:	4608      	mov	r0, r1
 8001278:	4611      	mov	r1, r2
 800127a:	2200      	movs	r2, #0
 800127c:	602a      	str	r2, [r5, #0]
 800127e:	461a      	mov	r2, r3
 8001280:	f7ff f8f1 	bl	8000466 <_lseek>
 8001284:	1c43      	adds	r3, r0, #1
 8001286:	d102      	bne.n	800128e <_lseek_r+0x1e>
 8001288:	682b      	ldr	r3, [r5, #0]
 800128a:	b103      	cbz	r3, 800128e <_lseek_r+0x1e>
 800128c:	6023      	str	r3, [r4, #0]
 800128e:	bd38      	pop	{r3, r4, r5, pc}
 8001290:	200001e8 	.word	0x200001e8

08001294 <_read_r>:
 8001294:	b538      	push	{r3, r4, r5, lr}
 8001296:	4d07      	ldr	r5, [pc, #28]	@ (80012b4 <_read_r+0x20>)
 8001298:	4604      	mov	r4, r0
 800129a:	4608      	mov	r0, r1
 800129c:	4611      	mov	r1, r2
 800129e:	2200      	movs	r2, #0
 80012a0:	602a      	str	r2, [r5, #0]
 80012a2:	461a      	mov	r2, r3
 80012a4:	f7ff f882 	bl	80003ac <_read>
 80012a8:	1c43      	adds	r3, r0, #1
 80012aa:	d102      	bne.n	80012b2 <_read_r+0x1e>
 80012ac:	682b      	ldr	r3, [r5, #0]
 80012ae:	b103      	cbz	r3, 80012b2 <_read_r+0x1e>
 80012b0:	6023      	str	r3, [r4, #0]
 80012b2:	bd38      	pop	{r3, r4, r5, pc}
 80012b4:	200001e8 	.word	0x200001e8

080012b8 <_sbrk_r>:
 80012b8:	b538      	push	{r3, r4, r5, lr}
 80012ba:	4d06      	ldr	r5, [pc, #24]	@ (80012d4 <_sbrk_r+0x1c>)
 80012bc:	2300      	movs	r3, #0
 80012be:	4604      	mov	r4, r0
 80012c0:	4608      	mov	r0, r1
 80012c2:	602b      	str	r3, [r5, #0]
 80012c4:	f7ff f8dc 	bl	8000480 <_sbrk>
 80012c8:	1c43      	adds	r3, r0, #1
 80012ca:	d102      	bne.n	80012d2 <_sbrk_r+0x1a>
 80012cc:	682b      	ldr	r3, [r5, #0]
 80012ce:	b103      	cbz	r3, 80012d2 <_sbrk_r+0x1a>
 80012d0:	6023      	str	r3, [r4, #0]
 80012d2:	bd38      	pop	{r3, r4, r5, pc}
 80012d4:	200001e8 	.word	0x200001e8

080012d8 <_write_r>:
 80012d8:	b538      	push	{r3, r4, r5, lr}
 80012da:	4d07      	ldr	r5, [pc, #28]	@ (80012f8 <_write_r+0x20>)
 80012dc:	4604      	mov	r4, r0
 80012de:	4608      	mov	r0, r1
 80012e0:	4611      	mov	r1, r2
 80012e2:	2200      	movs	r2, #0
 80012e4:	602a      	str	r2, [r5, #0]
 80012e6:	461a      	mov	r2, r3
 80012e8:	f7ff f87d 	bl	80003e6 <_write>
 80012ec:	1c43      	adds	r3, r0, #1
 80012ee:	d102      	bne.n	80012f6 <_write_r+0x1e>
 80012f0:	682b      	ldr	r3, [r5, #0]
 80012f2:	b103      	cbz	r3, 80012f6 <_write_r+0x1e>
 80012f4:	6023      	str	r3, [r4, #0]
 80012f6:	bd38      	pop	{r3, r4, r5, pc}
 80012f8:	200001e8 	.word	0x200001e8

080012fc <_free_r>:
 80012fc:	b538      	push	{r3, r4, r5, lr}
 80012fe:	4605      	mov	r5, r0
 8001300:	2900      	cmp	r1, #0
 8001302:	d041      	beq.n	8001388 <_free_r+0x8c>
 8001304:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001308:	1f0c      	subs	r4, r1, #4
 800130a:	2b00      	cmp	r3, #0
 800130c:	bfb8      	it	lt
 800130e:	18e4      	addlt	r4, r4, r3
 8001310:	f7ff fe36 	bl	8000f80 <__malloc_lock>
 8001314:	4a1d      	ldr	r2, [pc, #116]	@ (800138c <_free_r+0x90>)
 8001316:	6813      	ldr	r3, [r2, #0]
 8001318:	b933      	cbnz	r3, 8001328 <_free_r+0x2c>
 800131a:	6063      	str	r3, [r4, #4]
 800131c:	6014      	str	r4, [r2, #0]
 800131e:	4628      	mov	r0, r5
 8001320:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001324:	f7ff be32 	b.w	8000f8c <__malloc_unlock>
 8001328:	42a3      	cmp	r3, r4
 800132a:	d908      	bls.n	800133e <_free_r+0x42>
 800132c:	6820      	ldr	r0, [r4, #0]
 800132e:	1821      	adds	r1, r4, r0
 8001330:	428b      	cmp	r3, r1
 8001332:	bf01      	itttt	eq
 8001334:	6819      	ldreq	r1, [r3, #0]
 8001336:	685b      	ldreq	r3, [r3, #4]
 8001338:	1809      	addeq	r1, r1, r0
 800133a:	6021      	streq	r1, [r4, #0]
 800133c:	e7ed      	b.n	800131a <_free_r+0x1e>
 800133e:	461a      	mov	r2, r3
 8001340:	685b      	ldr	r3, [r3, #4]
 8001342:	b10b      	cbz	r3, 8001348 <_free_r+0x4c>
 8001344:	42a3      	cmp	r3, r4
 8001346:	d9fa      	bls.n	800133e <_free_r+0x42>
 8001348:	6811      	ldr	r1, [r2, #0]
 800134a:	1850      	adds	r0, r2, r1
 800134c:	42a0      	cmp	r0, r4
 800134e:	d10b      	bne.n	8001368 <_free_r+0x6c>
 8001350:	6820      	ldr	r0, [r4, #0]
 8001352:	4401      	add	r1, r0
 8001354:	1850      	adds	r0, r2, r1
 8001356:	4283      	cmp	r3, r0
 8001358:	6011      	str	r1, [r2, #0]
 800135a:	d1e0      	bne.n	800131e <_free_r+0x22>
 800135c:	6818      	ldr	r0, [r3, #0]
 800135e:	685b      	ldr	r3, [r3, #4]
 8001360:	6053      	str	r3, [r2, #4]
 8001362:	4408      	add	r0, r1
 8001364:	6010      	str	r0, [r2, #0]
 8001366:	e7da      	b.n	800131e <_free_r+0x22>
 8001368:	d902      	bls.n	8001370 <_free_r+0x74>
 800136a:	230c      	movs	r3, #12
 800136c:	602b      	str	r3, [r5, #0]
 800136e:	e7d6      	b.n	800131e <_free_r+0x22>
 8001370:	6820      	ldr	r0, [r4, #0]
 8001372:	1821      	adds	r1, r4, r0
 8001374:	428b      	cmp	r3, r1
 8001376:	bf04      	itt	eq
 8001378:	6819      	ldreq	r1, [r3, #0]
 800137a:	685b      	ldreq	r3, [r3, #4]
 800137c:	6063      	str	r3, [r4, #4]
 800137e:	bf04      	itt	eq
 8001380:	1809      	addeq	r1, r1, r0
 8001382:	6021      	streq	r1, [r4, #0]
 8001384:	6054      	str	r4, [r2, #4]
 8001386:	e7ca      	b.n	800131e <_free_r+0x22>
 8001388:	bd38      	pop	{r3, r4, r5, pc}
 800138a:	bf00      	nop
 800138c:	200001e4 	.word	0x200001e4

08001390 <_init>:
 8001390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001392:	bf00      	nop
 8001394:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001396:	bc08      	pop	{r3}
 8001398:	469e      	mov	lr, r3
 800139a:	4770      	bx	lr

0800139c <_fini>:
 800139c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800139e:	bf00      	nop
 80013a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013a2:	bc08      	pop	{r3}
 80013a4:	469e      	mov	lr, r3
 80013a6:	4770      	bx	lr
